[{"/Users/daniel/Documents/Projects/masters_website/client/src/index.js":"1","/Users/daniel/Documents/Projects/masters_website/client/src/App.js":"2","/Users/daniel/Documents/Projects/masters_website/client/src/components/PageHeader.js":"3","/Users/daniel/Documents/Projects/masters_website/client/src/components/TestComponent.js":"4","/Users/daniel/Documents/Projects/masters_website/client/src/components/CourseTable.js":"5","/Users/daniel/Documents/Projects/masters_website/client/src/components/TableFilter.js":"6","/Users/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js":"7","/Users/daniel/Documents/Projects/masters_website/client/src/atoms.js":"8","/Users/daniel/Documents/Projects/masters_website/client/src/components/functions/CourseSetter.js":"9"},{"size":293,"mtime":1640201776758,"results":"10","hashOfConfig":"11"},{"size":376,"mtime":1640437990564,"results":"12","hashOfConfig":"11"},{"size":467,"mtime":1640201776757,"results":"13","hashOfConfig":"11"},{"size":611,"mtime":1640201776757,"results":"14","hashOfConfig":"11"},{"size":5118,"mtime":1640201776756,"results":"15","hashOfConfig":"11"},{"size":5005,"mtime":1640437990565,"results":"16","hashOfConfig":"11"},{"size":2687,"mtime":1640201776755,"results":"17","hashOfConfig":"11"},{"size":261,"mtime":1640201776755,"results":"18","hashOfConfig":"11"},{"size":1980,"mtime":1640201776758,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"f296l7",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"/Users/daniel/Documents/Projects/masters_website/client/src/index.js",[],["44","45"],"/Users/daniel/Documents/Projects/masters_website/client/src/App.js",[],"/Users/daniel/Documents/Projects/masters_website/client/src/components/PageHeader.js",["46"],"import React from \"react\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logo: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <nav className=\"navbar sticky-top navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"/\">\n          MASTERS-LIU\n        </a>\n\n        <a className=\"nav-item nav-link\" href=\"#\">\n          Valda kurser\n        </a>\n\n        </nav>\n    );\n  }\n}\n\nexport default Header;\n","/Users/daniel/Documents/Projects/masters_website/client/src/components/TestComponent.js",["47","48","49","50","51"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState, selector, useRecoilValue } from \"recoil\";\nimport {courses as coursesToHandleAtom } from \"../atoms\";\n\nclass TestComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"filterBoxes\">\n        <TestFunc/>\n      </div>\n    );\n  }\n}\n\nfunction TestFunc() {\n    const courses = useRecoilValue(coursesToHandleAtom);\n\n    console.log({courses});\n    return (\n        <p>tjena</p>\n    );\n};\n\n\nexport default TestComponent;\n","/Users/daniel/Documents/Projects/masters_website/client/src/components/CourseTable.js",["52","53"],"import React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport Checkbox from \"./Checkbox.js\";\nimport { useRecoilValue } from 'recoil';\nimport {courses as coursesAtom, areas as allAreasAtom} from \"../atoms\";\n\nconst CourseTable = () => {\n  const courses = useRecoilValue(coursesAtom);\n  const areas = useRecoilValue(allAreasAtom);\n\n  return Semester(courses, areas);\n}\n\nconst Semester = (courses, areas) => {\n  var semester = 7;\n  var renderedSemesters = [];\n\n  do {\n    renderedSemesters.push(\n      <div id=\"accordion\" className=\"full-table\">\n        <div className=\"card\">\n          <div className=\"card-header\" id={\"semester_\" + semester}>\n            <h2 className=\"mb-0\">\n              <button\n                className=\"btn btn-link\"\n                data-toggle=\"collapse\"\n                data-target={\"#collapse\" + semester}\n                aria-expanded=\"true\"\n                aria-controls={\"collapseOne\" + semester}\n              >\n                Termin {semester}\n              </button>\n            </h2>\n          </div>\n\n          <div\n            id={\"collapse\" + semester}\n            className=\"collapse show\"\n            aria-labelledby={\"semester_\" + semester}\n            data-parent=\"#accordion\"\n          >\n            <div className=\"card-body\">{Areas(semester, courses, areas)}</div>\n          </div>\n        </div>\n      </div>\n    );\n    semester++;\n  } while (semester <= 9);\n  return <div>{renderedSemesters}</div>;\n}\n\nconst Areas = (semester, courses, areas) => {\n  var renderedAreas = [];\n\n  for (let i = 0; i < areas.length; i++) {\n    const area = areas[i];\n    if (area !== \"\"){\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          <h3 className=\"area-header\">{area}</h3>\n          {Period(semester, area, courses)}\n        </div>\n      );\n    }\n    else{\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          {Period(semester, area, courses)}\n        </div>\n      )\n    }\n  }\n  return <div>{renderedAreas}</div>;\n}\n\nconst Period = (semester, area, courses) => {\n  var period = 1;\n  var renderedPeriods = [];\n\n  do {\n    renderedPeriods.push(\n      <div className=\"periods\">\n        <div className={\"period_\" + period}>\n          <h5>Period {period}</h5>\n          {Course(semester, area, period, courses)}\n        </div>\n      </div>\n    );\n    period++;\n  } while (period <= 2);\n  return <div>{renderedPeriods}</div>;\n}\n\n\nconst Course = (semester, area, period, courses) => {\n  var renderedCourses = [];\n  var coursesToRender = [];\n\n  for (let i = 0; i < courses.name.length; i++) {\n    const course = courses.course[i];\n    const to_render = shallCourseRender(\n      semester,\n      period,\n      course.dynamic_values\n    );\n\n    if (to_render && course.area.includes(area)) {\n      coursesToRender.push(course);\n    }\n  }\n\n  renderedCourses.push(\n    <table className=\"table table-sm\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Check</th>\n          <th scope=\"col\">Kurskod</th>\n          <th scope=\"col\">Kurs</th>\n          <th scope=\"col\">Hp</th>\n          <th scope=\"col\">Niv√•</th>\n          <th scope=\"col\">Block</th>\n          <th scope=\"col\">VOF</th>\n          <th scope=\"col\">TEN</th>\n          <th scope=\"col\">LAB</th>\n          <th scope=\"col\">PRA</th>\n          <th scope=\"col\">UPG</th>\n          <th scope=\"col\">KTR</th>\n          <th scope=\"col\">HEM</th>\n          <th scope=\"col\">BAS</th>\n        </tr>\n      </thead>\n      <tbody>\n        {coursesToRender.map((course) => (\n          <tr>\n            <Checkbox course={course}\n              semester={semester}\n              period={period}\n            />\n            <td style={{width: \"5em\"}}>\n              <a\n                href={\n                  \"http://www.google.com/search?q=\" + course.code + \"+liu\"\n                }\n              >\n                {course.code}\n              </a>\n            </td>\n            <td style={{width: \"40em\"}}>\n              <a href={course.url}>{course.name}</a>\n            </td>\n            <td style={{ width: \"4em\" }}>{course.points}</td>\n            <td style={{ width: \"4em\" }}>{course.level}</td>\n            <td style={{ width: \"5em\" }}>{course.block}</td>\n            <td style={{ width: \"4em\" }}>{course.vof}</td>\n            <td>{ExaminationObject(course.exam)}</td>\n            <td>{ExaminationObject(course.lab)}</td>\n            <td>{ExaminationObject(course.project)}</td>\n            <td>{ExaminationObject(course.upg)}</td>\n            <td>{ExaminationObject(course.ktr)}</td>\n            <td>{ExaminationObject(course.hem)}</td>\n            <td>{ExaminationObject(course.bas)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n  return <div>{renderedCourses}</div>;\n}\n\nconst ExaminationObject = (examination) => {\n  if (examination === true){\n    return \"X\";\n  }\n  return;\n}\n\nconst shallCourseRender = ((semester, period, dyn_values) => {\n  for (let i = 0; i < dyn_values.length; i++) {\n    if (\n      dyn_values[i].semester === semester &&\n      dyn_values[i].period === period\n    ) {\n      return true;\n    }\n  }\n  return false;\n});\n\n\nexport default CourseTable;","/Users/daniel/Documents/Projects/masters_website/client/src/components/TableFilter.js",["54","55"],"/Users/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js",["56","57"],"import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport {courses as coursesAtom} from \"../atoms.js\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\n\nconst Checkbox = (props) => {\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n  const courseState = courses.course[props.course.id];\n  const [disabled, setDisabled] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  function handleCheckboxClick(semester, period) {\n    setCourses(originalState => {\n      // set new state\n      const newState = cloneDeep({ ...originalState });\n      const course = newState.course[props.course.id];\n\n      // set dynamic values and checked variable\n      if (course.checked === true) {\n        course.checked = false;\n        for (var i = 0; i < course.dynamic_values.length; i++){\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = false;\n          }\n        }\n      } else {\n        course.checked = true;\n        for (var i = 0; i < course.dynamic_values.length; i++){\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = true;\n          }\n        }\n      }\n\n      return newState;\n    });\n  }\n\n  useEffect(() => {\n\n    if (courseState.checked) {\n      var checked = false;\n      for (var i = 0; i < courseState.dynamic_values.length; i++){\n        if (courseState.dynamic_values[i].semester === props.semester && courseState.dynamic_values[i].period === props.period && courseState.dynamic_values[i].checked_here) {\n          checked = true;\n        }\n      }\n\n      if (!checked) {\n        setDisabled(true);\n      }\n\n      if (checked) {\n        setChecked(true);\n      }\n    }\n    else{\n      setDisabled(false);\n      setChecked(false);\n    }\n    // this is not effective, it \"changes\" all course objects, not just the one that is clicked\n  }, [courseState]);\n\n\n  if (disabled){\n    return (\n      <div className=\"mdc-checkbox\" \n      style={{ margin: \"auto\", width: \"35px\"}} >\n        <input type=\"checkbox\" \n        className=\"mdc-checkbox__native-control\" \n        id=\"checkbox-1\"\n        disabled\n        />\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"mdc-checkbox\" \n      style={{ width: \"15px\", margin: \"auto\", }}\n      onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\" \n        className=\"mdc-checkbox__native-control\" \n        id=\"checkbox-1\"\n        checked={checked}/>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","/Users/daniel/Documents/Projects/masters_website/client/src/atoms.js",[],"/Users/daniel/Documents/Projects/masters_website/client/src/components/functions/CourseSetter.js",["58"],"import cloneDeep from \"lodash/cloneDeep\";\n\nexport function setCourses(nonHandledCourses) {\n  const courses_mount = cloneDeep(nonHandledCourses);\n  const all_areas = [];\n  const courses = {\n    name: [],\n    course: [],\n  };\n\n  var course_id = 0;\n\n  for (let i = 0; i < courses_mount.length; i++) {\n    var course = courses_mount[i];\n\n    if (!all_areas.includes(course.area)) {\n      all_areas.push(course.area);\n    }\n\n    if (!courses.name.includes(course.name)) {\n      course = fixCourseDatatypes(course);\n      course.id = course_id;\n      course_id++;\n      courses.name.push(course.name);\n      courses.course.push(course);\n      course.checked = false;\n    } else {\n      var index = courses.name.indexOf(course.name);\n\n      if (!courses.course[index].area.includes(course.area)) {\n        courses.course[index].area.push(course.area);\n      }\n\n      var dynamic_values = courses.course[index].dynamic_values;\n      var dyn_values = setDynamicValues(course);\n\n      courses.course[index].dynamic_values.push(dyn_values);\n\n      var dyn_val_unique = courses.course[index].dynamic_values.reduce(\n        (unique, o) => {\n          if (\n            !unique.some(\n              (obj) =>\n                obj.semester === o.semester &&\n                obj.block === o.block &&\n                obj.period === o.period\n            )\n          ) {\n            unique.push(o);\n          }\n          return unique;\n        },\n        []\n      );\n      courses.course[index].dynamic_values = dyn_val_unique;\n    }\n  }\n  return [courses, all_areas];\n};\n\n\n\nfunction setDynamicValues(course) {\n  var dynamic_values = {\n    semester: course.semester,\n    block: course.block,\n    period: course.period,\n    checked_here: false,\n  };\n  return dynamic_values;\n}\n\n// variable needs to be of type array for the ones below\nfunction fixCourseDatatypes(course) {\n  course.dynamic_values = [setDynamicValues(course)];\n  course.area = [course.area];\n  return course;\n}\n\nexport default setCourses;",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":18,"column":9,"nodeType":"65","endLine":18,"endColumn":51},{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"70","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":26},{"ruleId":"66","severity":1,"message":"71","line":2,"column":28,"nodeType":"68","messageId":"69","endLine":2,"endColumn":36},{"ruleId":"66","severity":1,"message":"72","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":24},{"ruleId":"66","severity":1,"message":"73","line":3,"column":26,"nodeType":"68","messageId":"69","endLine":3,"endColumn":34},{"ruleId":"66","severity":1,"message":"70","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"66","severity":1,"message":"71","line":1,"column":28,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"74","line":3,"column":45,"nodeType":"68","messageId":"69","endLine":3,"endColumn":59},{"ruleId":"75","severity":1,"message":"76","line":43,"column":6,"nodeType":"77","endLine":43,"endColumn":22,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":29,"column":18,"nodeType":"68","messageId":"81","endLine":29,"endColumn":19},{"ruleId":"75","severity":1,"message":"82","line":63,"column":6,"nodeType":"77","endLine":63,"endColumn":19,"suggestions":"83"},{"ruleId":"66","severity":1,"message":"84","line":34,"column":11,"nodeType":"68","messageId":"69","endLine":34,"endColumn":25},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'useRecoilState' is defined but never used.","'selector' is defined but never used.","'useRecoilValue' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'areas', 'courses', 'setAllAreas', 'setHandledCourses', and 'setNonHandledCourses'. Either include them or remove the dependency array.","ArrayExpression",["87"],"no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'props.period' and 'props.semester'. Either include them or remove the dependency array.",["88"],"'dynamic_values' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [areas, courses, currentProgram, setAllAreas, setHandledCourses, setNonHandledCourses]",{"range":"93","text":"94"},"Update the dependencies array to be: [courseState, props.period, props.semester]",{"range":"95","text":"96"},[1211,1227],"[areas, courses, currentProgram, setAllAreas, setHandledCourses, setNonHandledCourses]",[2028,2041],"[courseState, props.period, props.semester]"]