[{"/home/daniel/Documents/Projects/masters_website/client/src/index.js":"1","/home/daniel/Documents/Projects/masters_website/client/src/atoms.js":"2","/home/daniel/Documents/Projects/masters_website/client/src/pages/PageHeader.js":"3","/home/daniel/Documents/Projects/masters_website/client/src/pages/table/TableFilter.js":"4","/home/daniel/Documents/Projects/masters_website/client/src/pages/table/CourseTable.js":"5","/home/daniel/Documents/Projects/masters_website/client/src/pages/table/Checkbox.js":"6","/home/daniel/Documents/Projects/masters_website/client/src/pages/functions/CourseSetter.js":"7","/home/daniel/Documents/Projects/masters_website/client/src/pages/chosen/ChosenCourses.js":"8","/home/daniel/Documents/Projects/masters_website/client/src/pages/table/MainPage.js":"9","/home/daniel/Documents/Projects/masters_website/client/src/pages/chosen/ChosenCoursePage.js":"10"},{"size":702,"mtime":1656347122930,"results":"11","hashOfConfig":"12"},{"size":592,"mtime":1656249397379,"results":"13","hashOfConfig":"12"},{"size":607,"mtime":1655632223362,"results":"14","hashOfConfig":"12"},{"size":6160,"mtime":1656249368730,"results":"15","hashOfConfig":"12"},{"size":6239,"mtime":1656754712115,"results":"16","hashOfConfig":"12"},{"size":2689,"mtime":1655640054394,"results":"17","hashOfConfig":"12"},{"size":1982,"mtime":1656249531521,"results":"18","hashOfConfig":"12"},{"size":148,"mtime":1655632531011,"results":"19","hashOfConfig":"12"},{"size":334,"mtime":1656347624723,"results":"20","hashOfConfig":"12"},{"size":131,"mtime":1655638717759,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1uqf03w",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/daniel/Documents/Projects/masters_website/client/src/index.js",[],["46","47"],"/home/daniel/Documents/Projects/masters_website/client/src/atoms.js",[],"/home/daniel/Documents/Projects/masters_website/client/src/pages/PageHeader.js",[],"/home/daniel/Documents/Projects/masters_website/client/src/pages/table/TableFilter.js",["48","49","50"],"import axios from \"axios\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useRecoilState, useSetRecoilState, useRecoilValue } from \"recoil\";\nimport \"./TableFilter.css\";\nimport {\n  nonHandledCourses as coursesToHandleAtom,\n  courses as handledCoursesAtom,\n  areas as allAreasAtom,\n  areaFilter as areaFilterAtom,\n  examinationFilter as examinationFilterAtom,\n  chosenProgram as chosenProgramAtom\n} from \"../../atoms\";\nimport { setCourses } from \"../functions/CourseSetter\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\nclass TableFilter extends React.Component {\n  render() {\n    return (\n      <div className=\"filterBoxes\">\n        <ProgramFilter />\n        <AreaFilter />\n        <PrecisionFilter />\n      </div>\n    );\n  }\n}\n\n// #TODO:\n// extend api and database to show other programs courses\nfunction ProgramFilter() {\n  const [currentProgram, setProgramAtom] = useRecoilState(chosenProgramAtom);\n  const [coursesToHandle, setNonHandledCourses] = useRecoilState(\n    coursesToHandleAtom\n  );\n  const setHandledCourses = useSetRecoilState(handledCoursesAtom);\n  const setAllAreas = useSetRecoilState(allAreasAtom);\n\n  const [courses, areas] = setCourses(coursesToHandle);\n\n  useEffect(() => {\n    // setNonHandledCourses are for courses with duplicates, \n    // courses in different areas, periods etc.\n    axios.get(\"http://localhost:5000/courses\").then((res) => {\n      setNonHandledCourses(res.data);\n    });\n    // Handled courses are without duplicates\n    setHandledCourses(courses);\n    setAllAreas(areas);\n  }, [currentProgram]);\n\n  const setProgram = (program) => {\n    setProgramAtom(program);\n    console.log(currentProgram);\n  }\n\n  var programs = {\n    D: \"Datateknik\",\n    DPU: \"Design- & produktutveckling\",\n    ED: \"Elektronikdesign\",\n    EMM: \"Energi - miljö - management\",\n    I: \"Industriell Ekonomi\",\n    IT: \"Informationsteknologi\",\n    KB: \"Kemisk biologi\",\n    KTS: \"Kommunikation, transport och samhälle\",\n    M: \"Maskinteknik\",\n    MED: \"Medicinsk teknisk\",\n    MT: \"Medieteknik\",\n    U: \"Mjukvaruteknik\",\n    TBI: \"Teknisk Biologi\",\n    Y: \"Teknisk fysik och elektroteknik\",\n  };\n\n\n  return (\n    <div className=\"filterBox\">\n      <h3>Program</h3>\n      <div className=\"overflow-auto\">\n        <div class=\"col-4\">\n          <div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\n            {Object.entries(programs).map(([code, program]) => (\n              <a\n                class=\"list-group-item list-group-item-action\"\n                program={code}\n                id=\"list-home-list\"\n                data-toggle=\"list\"\n                href=\"#list-home\"\n                role=\"tab\"\n                aria-controls=\"home\"\n                onClick={(e) =>\n                  setProgram(e.target.attributes.program.nodeValue)\n                }\n              >\n                {program}\n              </a>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction AreaFilter() {\n  const areas = cloneDeep(useRecoilValue(allAreasAtom));\n  const setAreaFilter = useSetRecoilState(areaFilterAtom);\n\n  for (var i = 0; i < areas.length; i++){\n    if (areas[i] === \"\"){\n      areas.splice(i, 1);\n    }\n  }\n\n  function onCheckboxClick(area, value) {\n    // delete from areafilter\n    if (value){\n      setAreaFilter((areaFilter) => areaFilter.filter((item) => item !== area));\n    }\n    // add to areafilter\n    else {\n      setAreaFilter((areaFilter) => \n        (areaFilter.find((item) =>\n        item === area) ?\n          area : [...areaFilter, area])); \n    }\n  }\n\n  return (\n    <div className=\"filterBox\">\n      <h3>Profil</h3>\n      <div className=\"overflow-auto\">\n        <div class=\"col-4\">\n          <div\n            class=\"list-group\"\n            id=\"list-tab\"\n            role=\"tablist\"\n            style={{ backgroundColor: \"white\" }}\n          >\n            {areas.map((area) => { \n              return(\n              <div class=\"form-check\" style={{ margin: \"5px\" }}>\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexCheckDefault\"\n                  defaultChecked\n                  onClick={(e) => {\n                      onCheckboxClick(area, e.target.checked);\n                  }}\n                />\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\n                  {area}\n                </label>\n              </div>\n            )})}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction PrecisionFilter() {\n  const setExaminationFilter = useSetRecoilState(examinationFilterAtom);\n\n  var examinations = [\n    \"TEN\",\n    \"LAB\",\n    \"UPG\",\n    \"KTR\",\n    \"HEM\",\n    \"BAS\",\n    \"PRA\",\n  ];\n\n  function onCheckboxClick(examination, value) {\n    // delete from examinationfilter\n    if (value){\n      setExaminationFilter((examinationFilter) => examinationFilter.filter((item) => item !== examination));\n    }\n    // add to examinationfilter\n    else {\n      setExaminationFilter((examinationFilter) =>\n        (examinationFilter.find((item) =>\n        item === examination) ?\n          examination : [...examinationFilter, examination]));\n    }\n  }\n\n  return (\n    <div className=\"filterBox\">\n      <h3>Examinationsmoment</h3>\n      <div className=\"overflow-auto\">\n        <div class=\"col-4\">\n          <div\n            class=\"list-group\"\n            id=\"list-tab\"\n            role=\"tablist\"\n            style={{ backgroundColor: \"white\" }}\n          >\n            {examinations.map((examination) => (\n              <div class=\"form-check\" style={{ margin: \"5px\" }}>\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  id=\"flexCheckDefault\"\n                  onClick={(e) => {\n                      onCheckboxClick(examination, e.target.checked);\n                  }}\n                  defaultChecked\n                />\n                <label class=\"form-check-label\" for=\"flexCheckChecked\">\n                  {examination}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TableFilter;\n","/home/daniel/Documents/Projects/masters_website/client/src/pages/table/CourseTable.js",["51","52"],"/home/daniel/Documents/Projects/masters_website/client/src/pages/table/Checkbox.js",["53","54"],"import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport {courses as coursesAtom} from \"../../atoms.js\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\n\nconst Checkbox = (props) => {\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n  const courseState = courses.course[props.course.id];\n  const [disabled, setDisabled] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  function handleCheckboxClick(semester, period) {\n    setCourses(originalState => {\n      // set new state\n      const newState = cloneDeep({ ...originalState });\n      const course = newState.course[props.course.id];\n\n      // set dynamic values and checked variable\n      if (course.checked === true) {\n        course.checked = false;\n        for (var i = 0; i < course.dynamic_values.length; i++){\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = false;\n          }\n        }\n      } else {\n        course.checked = true;\n        for (var i = 0; i < course.dynamic_values.length; i++){\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = true;\n          }\n        }\n      }\n\n      return newState;\n    });\n  }\n\n  useEffect(() => {\n    if (courseState.checked) {\n      var checked = false;\n      for (var i = 0; i < courseState.dynamic_values.length; i++){\n        if (courseState.dynamic_values[i].semester === props.semester && courseState.dynamic_values[i].period === props.period && courseState.dynamic_values[i].checked_here) {\n          checked = true;\n        }\n      }\n\n      if (!checked) {\n        setDisabled(true);\n      }\n\n      if (checked) {\n        setChecked(true);\n      }\n    }\n    else{\n      setDisabled(false);\n      setChecked(false);\n    }\n    // this is not effective, it \"changes\" all course objects, not just the one that is clicked\n  }, [courseState]);\n\n\n  if (disabled){\n    return (\n      <div className=\"mdc-checkbox\" \n      style={{ margin: \"auto\", width: \"35px\"}} >\n        <input type=\"checkbox\" \n        className=\"mdc-checkbox__native-control\" \n        id=\"checkbox-1\"\n        disabled\n        />\n      </div>\n    );\n  }\n  else {\n    return (\n      <div className=\"mdc-checkbox\" \n      style={{ width: \"15px\", margin: \"auto\", }}\n      onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\" \n        className=\"mdc-checkbox__native-control\" \n        id=\"checkbox-1\"\n        checked={checked}/>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","/home/daniel/Documents/Projects/masters_website/client/src/pages/functions/CourseSetter.js",["55"],"import cloneDeep from \"lodash/cloneDeep\";\n\nexport function setCourses(nonHandledCourses) {\n  const courses_mount = cloneDeep(nonHandledCourses);\n  const all_areas = [];\n  const courses = {\n    name: [],\n    course: [],\n  };\n\n  var course_id = 0;\n  \n  for (let i = 0; i < courses_mount.length; i++) {\n    var course = courses_mount[i];\n\n    if (!all_areas.includes(course.area)) {\n      all_areas.push(course.area);\n    }\n\n    if (!courses.name.includes(course.name)) {\n      course = fixCourseDatatypes(course);\n      course.id = course_id;\n      course_id++;\n      courses.name.push(course.name);\n      courses.course.push(course);\n      course.checked = false;\n    } else {\n      var index = courses.name.indexOf(course.name);\n\n      if (!courses.course[index].area.includes(course.area)) {\n        courses.course[index].area.push(course.area);\n      }\n\n      var dynamic_values = courses.course[index].dynamic_values;\n      var dyn_values = setDynamicValues(course);\n\n      courses.course[index].dynamic_values.push(dyn_values);\n\n      var dyn_val_unique = courses.course[index].dynamic_values.reduce(\n        (unique, o) => {\n          if (\n            !unique.some(\n              (obj) =>\n                obj.semester === o.semester &&\n                obj.block === o.block &&\n                obj.period === o.period\n            )\n          ) {\n            unique.push(o);\n          }\n          return unique;\n        },\n        []\n      );\n      courses.course[index].dynamic_values = dyn_val_unique;\n    }\n  }\n  return [courses, all_areas];\n};\n\n\n\nfunction setDynamicValues(course) {\n  var dynamic_values = {\n    semester: course.semester,\n    block: course.block,\n    period: course.period,\n    checked_here: false,\n  };\n  return dynamic_values;\n}\n\n// variable needs to be of type array for the ones below\nfunction fixCourseDatatypes(course) {\n  course.dynamic_values = [setDynamicValues(course)];\n  course.area = [course.area];\n  return course;\n}\n\nexport default setCourses;","/home/daniel/Documents/Projects/masters_website/client/src/pages/chosen/ChosenCourses.js",[],"/home/daniel/Documents/Projects/masters_website/client/src/pages/table/MainPage.js",[],"/home/daniel/Documents/Projects/masters_website/client/src/pages/chosen/ChosenCoursePage.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":28,"nodeType":"62","messageId":"63","endLine":2,"endColumn":43},{"ruleId":"60","severity":1,"message":"64","line":2,"column":45,"nodeType":"62","messageId":"63","endLine":2,"endColumn":53},{"ruleId":"65","severity":1,"message":"66","line":49,"column":6,"nodeType":"67","endLine":49,"endColumn":22,"suggestions":"68"},{"ruleId":"60","severity":1,"message":"69","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":29,"column":18,"nodeType":"62","messageId":"72","endLine":29,"endColumn":19},{"ruleId":"65","severity":1,"message":"73","line":62,"column":6,"nodeType":"67","endLine":62,"endColumn":19,"suggestions":"74"},{"ruleId":"60","severity":1,"message":"75","line":34,"column":11,"nodeType":"62","messageId":"63","endLine":34,"endColumn":25},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'areas', 'courses', 'setAllAreas', 'setHandledCourses', and 'setNonHandledCourses'. Either include them or remove the dependency array.","ArrayExpression",["78"],"'useEffect' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'props.period' and 'props.semester'. Either include them or remove the dependency array.",["79"],"'dynamic_values' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [areas, courses, currentProgram, setAllAreas, setHandledCourses, setNonHandledCourses]",{"range":"84","text":"85"},"Update the dependencies array to be: [courseState, props.period, props.semester]",{"range":"86","text":"87"},[1551,1567],"[areas, courses, currentProgram, setAllAreas, setHandledCourses, setNonHandledCourses]",[2030,2043],"[courseState, props.period, props.semester]"]