{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projects/masters_website/client/src/components/CourseTable.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport Checkbox from \"./Checkbox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseTable = () => {\n  return Semester();\n};\n\n_c = CourseTable;\n\nconst Semester = () => {\n  var semester = 7;\n  var renderedSemesters = [];\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"r\\xF6b\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n  /*\n  do {\n    renderedSemesters.push(\n      <div id=\"accordion\" className=\"full-table\">\n        <div className=\"card\">\n          <div className=\"card-header\" id={\"semester_\" + semester}>\n            <h2 className=\"mb-0\">\n              <button\n                className=\"btn btn-link\"\n                data-toggle=\"collapse\"\n                data-target={\"#collapse\" + semester}\n                aria-expanded=\"true\"\n                aria-controls={\"collapseOne\" + semester}\n              >\n                Termin {semester}\n              </button>\n            </h2>\n          </div>\n           <div\n            id={\"collapse\" + semester}\n            className=\"collapse show\"\n            aria-labelledby={\"semester_\" + semester}\n            data-parent=\"#accordion\"\n          >\n            <div className=\"card-body\">{Areas(semester)}</div>\n          </div>\n        </div>\n      </div>\n    );\n    semester++;\n  } while (semester <= 9);\n  return <div>{renderedSemesters}</div>;*/\n};\n\n_c2 = Semester;\n\nconst Areas = semester => {\n  var renderedAreas = []; // SET AREAS \n\n  for (let i = 0; i < this.state.all_areas.length; i++) {\n    const area = this.state.all_areas[i];\n\n    if (area !== \"\") {\n      renderedAreas.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"semester\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"area-header\",\n          children: area\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), Period(semester, area)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this));\n    } else {\n      renderedAreas.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"semester\",\n        children: this.period(semester, area)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedAreas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Areas;\n\nconst Period = (semester, area) => {\n  var period = 1;\n  var renderedPeriods = [];\n\n  do {\n    renderedPeriods.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"periods\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"period_\" + period,\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Period \", period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this));\n    period++;\n  } while (period <= 2);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedPeriods\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};\n/*\nconst Course = (semester, area, period) => {\n  var renderedCourses = [];\n  var coursesToRender = [];\n\n  for (let i = 0; i < courses.name.length; i++) {\n    const course = courses.course[i];\n    const to_render = shallCourseRender(\n      semester,\n      period,\n      course.dynamic_values\n    );\n\n    if (to_render && course.area.includes(area)) {\n      coursesToRender.push(course);\n    }\n  }\n\n  renderedCourses.push(\n    <table className=\"table table-sm\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Check</th>\n          <th scope=\"col\">Kurskod</th>\n          <th scope=\"col\">Kurs</th>\n          <th scope=\"col\">Hp</th>\n          <th scope=\"col\">Niv√•</th>\n          <th scope=\"col\">Block</th>\n          <th scope=\"col\">VOF</th>\n          <th scope=\"col\">TEN</th>\n          <th scope=\"col\">LAB</th>\n          <th scope=\"col\">PRA</th>\n          <th scope=\"col\">UPG</th>\n          <th scope=\"col\">KTR</th>\n          <th scope=\"col\">HEM</th>\n          <th scope=\"col\">BAS</th>\n        </tr>\n      </thead>\n      <tbody>\n        {coursesToRender.map((course) => (\n          <tr>\n            <Checkbox course={course}\n              semester={course.semester}\n              period={course.period}\n            />\n            {\n            <td style={{width: \"1.2em\"}}>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  name=\"prop1\"\n                  id=\"string\"\n                  className=\"modal__checkbox-input\"\n                />\n              </div>\n            </td>}\n            <td style={{width: \"5em\"}}>\n              <a\n                href={\n                  \"http://www.google.com/search?q=\" + course.code + \"+liu\"\n                }\n              >\n                {course.code}\n              </a>\n            </td>\n            <td style={{width: \"40em\"}}>\n              <a href={course.url}>{course.name}</a>\n            </td>\n            <td style={{ width: \"4em\" }}>{course.points}</td>\n            <td style={{ width: \"4em\" }}>{course.level}</td>\n            <td style={{ width: \"5em\" }}>{course.block}</td>\n            <td style={{ width: \"4em\" }}>{course.vof}</td>\n            <td>{this.examinationObject(course.exam)}</td>\n            <td>{this.examinationObject(course.lab)}</td>\n            <td>{this.examinationObject(course.project)}</td>\n            <td>{this.examinationObject(course.upg)}</td>\n            <td>{this.examinationObject(course.ktr)}</td>\n            <td>{this.examinationObject(course.hem)}</td>\n            <td>{this.examinationObject(course.bas)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n  return <div>{renderedCourses}</div>;\n}\n\nconst ExaminationObject = (examination) => {\n  if (examination === true){\n    return \"X\";\n  }\n  return;\n}\n\nconst shallCourseRender = ((semester, period, dyn_values) => {\n  for (let i = 0; i < dyn_values.length; i++) {\n    if (\n      dyn_values[i].semester === semester &&\n      dyn_values[i].period === period\n    ) {\n      return true;\n    }\n  }\n  return false;\n});*/\n\n\n_c4 = Period;\nexport default CourseTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CourseTable\");\n$RefreshReg$(_c2, \"Semester\");\n$RefreshReg$(_c3, \"Areas\");\n$RefreshReg$(_c4, \"Period\");","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/CourseTable.js"],"names":["React","useEffect","useState","Checkbox","CourseTable","Semester","semester","renderedSemesters","Areas","renderedAreas","i","state","all_areas","length","area","push","Period","period","renderedPeriods"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAOC,QAAQ,EAAf;AACD,CAFD;;KAAMD,W;;AAIN,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,CAvCD;;MAAMF,Q;;AAyCN,MAAMG,KAAK,GAAIF,QAAD,IAAc;AAC1B,MAAIG,aAAa,GAAG,EAApB,CAD0B,CAG1B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAAzC,EAAiDH,CAAC,EAAlD,EAAsD;AACpD,UAAMI,IAAI,GAAG,KAAKH,KAAL,CAAWC,SAAX,CAAqBF,CAArB,CAAb;;AACA,QAAII,IAAI,KAAK,EAAb,EAAgB;AACdL,MAAAA,aAAa,CAACM,IAAd,eACE;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGE,MAAM,CAACV,QAAD,EAAWQ,IAAX,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,MAQI;AACFL,MAAAA,aAAa,CAACM,IAAd,eACE;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,kBACG,KAAKE,MAAL,CAAYX,QAAZ,EAAqBQ,IAArB;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AACD,sBAAO;AAAA,cAAML;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvBD;;MAAMD,K;;AAyBN,MAAMQ,MAAM,GAAG,CAACV,QAAD,EAAWQ,IAAX,KAAoB;AACjC,MAAIG,MAAM,GAAG,CAAb;AACA,MAAIC,eAAe,GAAG,EAAtB;;AAEA,KAAG;AACDA,IAAAA,eAAe,CAACH,IAAhB,eACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,YAAYE,MAA5B;AAAA,+BACE;AAAA,gCAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQAA,IAAAA,MAAM;AACP,GAVD,QAUSA,MAAM,IAAI,CAVnB;;AAWA,sBAAO;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBD;AAizHMF,M;AA2HN,eAAeZ,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport Checkbox from \"./Checkbox.js\";\n\nconst CourseTable = () => {\n  return Semester();\n}\n\nconst Semester = () => {\n  var semester = 7;\n  var renderedSemesters = [];\n\n  return <p>r√∂b</p>;\n\n  /*\n  do {\n    renderedSemesters.push(\n      <div id=\"accordion\" className=\"full-table\">\n        <div className=\"card\">\n          <div className=\"card-header\" id={\"semester_\" + semester}>\n            <h2 className=\"mb-0\">\n              <button\n                className=\"btn btn-link\"\n                data-toggle=\"collapse\"\n                data-target={\"#collapse\" + semester}\n                aria-expanded=\"true\"\n                aria-controls={\"collapseOne\" + semester}\n              >\n                Termin {semester}\n              </button>\n            </h2>\n          </div>\n\n          <div\n            id={\"collapse\" + semester}\n            className=\"collapse show\"\n            aria-labelledby={\"semester_\" + semester}\n            data-parent=\"#accordion\"\n          >\n            <div className=\"card-body\">{Areas(semester)}</div>\n          </div>\n        </div>\n      </div>\n    );\n    semester++;\n  } while (semester <= 9);\n  return <div>{renderedSemesters}</div>;*/\n}\n\nconst Areas = (semester) => {\n  var renderedAreas = [];\n\n  // SET AREAS \n  for (let i = 0; i < this.state.all_areas.length; i++) {\n    const area = this.state.all_areas[i];\n    if (area !== \"\"){\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          <h3 className=\"area-header\">{area}</h3>\n          {Period(semester, area)}\n        </div>\n      );\n    }\n    else{\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          {this.period(semester,area)}\n        </div>\n      )\n    }\n  }\n  return <div>{renderedAreas}</div>;\n}\n\nconst Period = (semester, area) => {\n  var period = 1;\n  var renderedPeriods = [];\n\n  do {\n    renderedPeriods.push(\n      <div className=\"periods\">\n        <div className={\"period_\" + period}>\n          <h5>Period {period}</h5>\n          {/*Course(semester, area, period)*/}\n        </div>\n      </div>\n    );\n    period++;\n  } while (period <= 2);\n  return <div>{renderedPeriods}</div>;\n}\n/*\nconst Course = (semester, area, period) => {\n  var renderedCourses = [];\n  var coursesToRender = [];\n\n  for (let i = 0; i < courses.name.length; i++) {\n    const course = courses.course[i];\n    const to_render = shallCourseRender(\n      semester,\n      period,\n      course.dynamic_values\n    );\n\n    if (to_render && course.area.includes(area)) {\n      coursesToRender.push(course);\n    }\n  }\n\n  renderedCourses.push(\n    <table className=\"table table-sm\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Check</th>\n          <th scope=\"col\">Kurskod</th>\n          <th scope=\"col\">Kurs</th>\n          <th scope=\"col\">Hp</th>\n          <th scope=\"col\">Niv√•</th>\n          <th scope=\"col\">Block</th>\n          <th scope=\"col\">VOF</th>\n          <th scope=\"col\">TEN</th>\n          <th scope=\"col\">LAB</th>\n          <th scope=\"col\">PRA</th>\n          <th scope=\"col\">UPG</th>\n          <th scope=\"col\">KTR</th>\n          <th scope=\"col\">HEM</th>\n          <th scope=\"col\">BAS</th>\n        </tr>\n      </thead>\n      <tbody>\n        {coursesToRender.map((course) => (\n          <tr>\n            <Checkbox course={course}\n              semester={course.semester}\n              period={course.period}\n            />\n            {\n            <td style={{width: \"1.2em\"}}>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  name=\"prop1\"\n                  id=\"string\"\n                  className=\"modal__checkbox-input\"\n                />\n              </div>\n            </td>}\n            <td style={{width: \"5em\"}}>\n              <a\n                href={\n                  \"http://www.google.com/search?q=\" + course.code + \"+liu\"\n                }\n              >\n                {course.code}\n              </a>\n            </td>\n            <td style={{width: \"40em\"}}>\n              <a href={course.url}>{course.name}</a>\n            </td>\n            <td style={{ width: \"4em\" }}>{course.points}</td>\n            <td style={{ width: \"4em\" }}>{course.level}</td>\n            <td style={{ width: \"5em\" }}>{course.block}</td>\n            <td style={{ width: \"4em\" }}>{course.vof}</td>\n            <td>{this.examinationObject(course.exam)}</td>\n            <td>{this.examinationObject(course.lab)}</td>\n            <td>{this.examinationObject(course.project)}</td>\n            <td>{this.examinationObject(course.upg)}</td>\n            <td>{this.examinationObject(course.ktr)}</td>\n            <td>{this.examinationObject(course.hem)}</td>\n            <td>{this.examinationObject(course.bas)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n  return <div>{renderedCourses}</div>;\n}\n\nconst ExaminationObject = (examination) => {\n  if (examination === true){\n    return \"X\";\n  }\n  return;\n}\n\nconst shallCourseRender = ((semester, period, dyn_values) => {\n  for (let i = 0; i < dyn_values.length; i++) {\n    if (\n      dyn_values[i].semester === semester &&\n      dyn_values[i].period === period\n    ) {\n      return true;\n    }\n  }\n  return false;\n});*/\n\nexport default CourseTable;"]},"metadata":{},"sourceType":"module"}