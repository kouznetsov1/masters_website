{"ast":null,"code":"export function setCourses(nonHandledCourses) {\n  const courses_mount = nonHandledCourses;\n  const all_areas = [];\n  const courses = {\n    name: [],\n    course: []\n  };\n\n  for (let i = 0; i < courses_mount.length; i++) {\n    var course = courses_mount[i];\n\n    if (!all_areas.includes(course.area)) {\n      all_areas.push(course.area);\n    }\n\n    if (!courses.name.includes(course.name)) {\n      course = fixCourseDatatypes(course);\n      courses.name.push(course.name);\n      courses.course.push(course);\n      course.strike_through = false;\n    } else {\n      var index = courses.name.indexOf(course.name);\n\n      if (!courses.course[index].area.includes(course.area)) {\n        courses.course[index].area.push(course.area);\n      }\n\n      var dynamic_values = courses.course[index].dynamic_values;\n      var dyn_values = setDynamicValues(course);\n      courses.course[index].dynamic_values.push(dyn_values);\n      var dyn_val_unique = courses.course[index].dynamic_values.reduce((unique, o) => {\n        if (!unique.some(obj => obj.semester === o.semester && obj.block === o.block && obj.period === o.period)) {\n          unique.push(o);\n        }\n\n        return unique;\n      }, []);\n      courses.course[index].dynamic_values = dyn_val_unique;\n    }\n  }\n\n  return [courses, all_areas];\n}\n;\n\nfunction setDynamicValues(course) {\n  var dynamic_values = {\n    semester: course.semester,\n    block: course.block,\n    period: course.period,\n    checked_here: false\n  };\n  return dynamic_values;\n} // variable needs to be of type array for the ones below\n\n\nfunction fixCourseDatatypes(course) {\n  course.dynamic_values = [setDynamicValues(course)];\n  course.area = [course.area];\n  return course;\n}\n\nexport default getCourses;","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/functions/CourseSetter.js"],"names":["setCourses","nonHandledCourses","courses_mount","all_areas","courses","name","course","i","length","includes","area","push","fixCourseDatatypes","strike_through","index","indexOf","dynamic_values","dyn_values","setDynamicValues","dyn_val_unique","reduce","unique","o","some","obj","semester","block","period","checked_here","getCourses"],"mappings":"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","sourcesContent":["\nexport function setCourses(nonHandledCourses) {\n  const courses_mount = nonHandledCourses;\n  const all_areas = [];\n  const courses = {\n    name: [],\n    course: [],\n  };\n  for (let i = 0; i < courses_mount.length; i++) {\n    var course = courses_mount[i];\n\n    if (!all_areas.includes(course.area)) {\n      all_areas.push(course.area);\n    }\n\n    if (!courses.name.includes(course.name)) {\n      course = fixCourseDatatypes(course);\n      courses.name.push(course.name);\n      courses.course.push(course);\n      course.strike_through = false;\n    } else {\n      var index = courses.name.indexOf(course.name);\n\n      if (!courses.course[index].area.includes(course.area)) {\n        courses.course[index].area.push(course.area);\n      }\n\n      var dynamic_values = courses.course[index].dynamic_values;\n      var dyn_values = setDynamicValues(course);\n\n      courses.course[index].dynamic_values.push(dyn_values);\n\n      var dyn_val_unique = courses.course[index].dynamic_values.reduce(\n        (unique, o) => {\n          if (\n            !unique.some(\n              (obj) =>\n                obj.semester === o.semester &&\n                obj.block === o.block &&\n                obj.period === o.period\n            )\n          ) {\n            unique.push(o);\n          }\n          return unique;\n        },\n        []\n      );\n      courses.course[index].dynamic_values = dyn_val_unique;\n    }\n  }\n  return [courses, all_areas];\n};\n\n\n\nfunction setDynamicValues(course) {\n  var dynamic_values = {\n    semester: course.semester,\n    block: course.block,\n    period: course.period,\n    checked_here: false,\n  };\n  return dynamic_values;\n}\n\n// variable needs to be of type array for the ones below\nfunction fixCourseDatatypes(course) {\n  course.dynamic_values = [setDynamicValues(course)];\n  course.area = [course.area];\n  return course;\n}\n\nexport default getCourses;"]},"metadata":{},"sourceType":"module"}