{"ast":null,"code":"import axios from \"axios\";\n\nclass CourseGetter {\n  getCourses() {\n    axios.get(\"http://localhost:5000/courses\").then(res => {\n      const courses_mount = res.data;\n      const all_areas = [];\n      const courses = {\n        name: [],\n        course: []\n      }; //const dispatch = useDispatch();\n\n      for (let i = 0; i < courses_mount.length; i++) {\n        var course = courses_mount[i];\n\n        if (!all_areas.includes(course.area)) {\n          all_areas.push(course.area);\n        }\n\n        if (!courses.name.includes(course.name)) {\n          course = this.fixCourseDatatypes(course);\n          courses.name.push(course.name);\n          courses.course.push(course);\n          course.strike_through = false;\n        } else {\n          var index = courses.name.indexOf(course.name);\n\n          if (!courses.course[index].area.includes(course.area)) {\n            courses.course[index].area.push(course.area);\n          }\n\n          var dynamic_values = courses.course[index].dynamic_values;\n          var dyn_values = this.setDynamicValues(course);\n          courses.course[index].dynamic_values.push(dyn_values);\n          var dyn_val_unique = courses.course[index].dynamic_values.reduce((unique, o) => {\n            if (!unique.some(obj => obj.semester === o.semester && obj.block === o.block && obj.period === o.period)) {\n              unique.push(o);\n            }\n\n            return unique;\n          }, []);\n          courses.course[index].dynamic_values = dyn_val_unique;\n        }\n      }\n\n      return \"hej\"; //return [courses, all_areas];\n    });\n  }\n\n  setDynamicValues(course) {\n    var dynamic_values = {\n      semester: course.semester,\n      block: course.block,\n      period: course.period,\n      checked_here: false\n    };\n    return dynamic_values;\n  } // variable needs to be of type array for the ones below\n\n\n  fixCourseDatatypes(course) {\n    course.dynamic_values = [this.setDynamicValues(course)];\n    course.area = [course.area];\n    return course;\n  }\n\n}","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/functions/CourseGetter.js"],"names":["axios","CourseGetter","getCourses","get","then","res","courses_mount","data","all_areas","courses","name","course","i","length","includes","area","push","fixCourseDatatypes","strike_through","index","indexOf","dynamic_values","dyn_values","setDynamicValues","dyn_val_unique","reduce","unique","o","some","obj","semester","block","period","checked_here"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nclass CourseGetter {\n  getCourses(){\n    axios.get(\"http://localhost:5000/courses\").then((res) => {\n        \n      const courses_mount = res.data;\n      const all_areas = [];\n      const courses = {\n        name: [],\n        course: [],\n      };\n      //const dispatch = useDispatch();\n\n      for (let i = 0; i < courses_mount.length; i++) {\n        var course = courses_mount[i];\n\n        if (!all_areas.includes(course.area)) {\n          all_areas.push(course.area);\n        }\n\n        if (!courses.name.includes(course.name)) {\n          course = this.fixCourseDatatypes(course);\n          courses.name.push(course.name);\n          courses.course.push(course);\n          course.strike_through = false;\n        } else {\n          var index = courses.name.indexOf(course.name);\n\n          if (!courses.course[index].area.includes(course.area)) {\n            courses.course[index].area.push(course.area);\n          }\n\n          var dynamic_values = courses.course[index].dynamic_values;\n          var dyn_values = this.setDynamicValues(course);\n\n          courses.course[index].dynamic_values.push(dyn_values);\n\n          var dyn_val_unique = courses.course[index].dynamic_values.reduce(\n            (unique, o) => {\n              if (\n                !unique.some(\n                  (obj) =>\n                    obj.semester === o.semester &&\n                    obj.block === o.block &&\n                    obj.period === o.period\n                )\n              ) {\n                unique.push(o);\n              }\n              return unique;\n            },\n            []\n          );\n          courses.course[index].dynamic_values = dyn_val_unique;\n        }\n      }\n      return \"hej\";\n      //return [courses, all_areas];\n    });\n  };\n\n  setDynamicValues(course) {\n    var dynamic_values = {\n      semester: course.semester,\n      block: course.block,\n      period: course.period,\n      checked_here: false,\n    };\n    return dynamic_values;\n  }\n\n    // variable needs to be of type array for the ones below\n    fixCourseDatatypes(course) {\n      course.dynamic_values = [this.setDynamicValues(course)];\n      course.area = [course.area];\n      return course;\n    }\n}"]},"metadata":{},"sourceType":"module"}