{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniel/Documents/Projects/masters_website/client/src/components/CourseTableTest.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Components.css\";\nimport axios from \"axios\";\n\nclass CourseTableTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      all_areas: [],\n      picked_courses: []\n    };\n  }\n  /* courses = {\n   *  course = {\n   *     name: string\n   *     areas: array\n   *     period: int\n   *     semester: int \n   *     etc......\n   *  }\n   * }\n   * */\n\n\n  fixCourseDataTypes(course) {\n    console.log(course);\n    return course;\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/courses\").then(res => {\n      const courses_mount = res.data;\n      const all_areas = [];\n      const courses = {\n        name: [],\n        course: []\n      };\n\n      for (let i = 0; i < courses_mount.length; i++) {\n        const course = courses_mount[i];\n\n        if (!all_areas.includes(course.area)) {\n          all_areas.push(course.area);\n        }\n\n        if (!courses.name.includes(course.name)) {\n          course = fixCourseDatatypes(course);\n          courses.name.push(course.name);\n          courses.course.push(course);\n        } else {\n          var index = courses.name.indexOf(course.name);\n        }\n      } //console.log(courses_mount.length);\n      //console.log(courses);\n\n\n      this.setState({\n        courses\n      });\n      this.setState({\n        all_areas\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default CourseTableTest;","map":{"version":3,"sources":["/Users/daniel/Documents/Projects/masters_website/client/src/components/CourseTableTest.js"],"names":["React","useEffect","useState","axios","CourseTableTest","Component","constructor","props","state","courses","all_areas","picked_courses","fixCourseDataTypes","course","console","log","componentDidMount","get","then","res","courses_mount","data","name","i","length","includes","area","push","fixCourseDatatypes","index","indexOf","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,kBAAkB,CAACC,MAAD,EAAQ;AAExBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOA,MAAP;AACD;;AAIDG,EAAAA,iBAAiB,GAAG;AAClBb,IAAAA,KAAK,CAACc,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,GAAD,IAAS;AACvD,YAAMC,aAAa,GAAGD,GAAG,CAACE,IAA1B;AACA,YAAMX,SAAS,GAAG,EAAlB;AACA,YAAMD,OAAO,GAAG;AACda,QAAAA,IAAI,EAAE,EADQ;AAEdT,QAAAA,MAAM,EAAE;AAFM,OAAhB;;AAIA,WAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,cAAMV,MAAM,GAAGO,aAAa,CAACG,CAAD,CAA5B;;AACA,YAAI,CAACb,SAAS,CAACe,QAAV,CAAmBZ,MAAM,CAACa,IAA1B,CAAL,EAAsC;AACpChB,UAAAA,SAAS,CAACiB,IAAV,CAAed,MAAM,CAACa,IAAtB;AACD;;AACD,YAAI,CAACjB,OAAO,CAACa,IAAR,CAAaG,QAAb,CAAsBZ,MAAM,CAACS,IAA7B,CAAL,EAAwC;AACtCT,UAAAA,MAAM,GAAGe,kBAAkB,CAACf,MAAD,CAA3B;AACAJ,UAAAA,OAAO,CAACa,IAAR,CAAaK,IAAb,CAAkBd,MAAM,CAACS,IAAzB;AACAb,UAAAA,OAAO,CAACI,MAAR,CAAec,IAAf,CAAoBd,MAApB;AACD,SAJD,MAKI;AACF,cAAIgB,KAAK,GAAGpB,OAAO,CAACa,IAAR,CAAaQ,OAAb,CAAqBjB,MAAM,CAACS,IAA5B,CAAZ;AACD;AACF,OApBsD,CAqBvD;AACA;;;AACA,WAAKS,QAAL,CAAc;AAAEtB,QAAAA;AAAF,OAAd;AACA,WAAKsB,QAAL,CAAc;AAAErB,QAAAA;AAAF,OAAd;AACD,KAzBD;AA0BD;;AAKDsB,EAAAA,MAAM,GAAE;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AAAiB;;AA/DyB;;AAmE9C,eAAe5B,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Components.css\";\nimport axios from \"axios\";\n\nclass CourseTableTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courses: [],\n      all_areas: [],\n      picked_courses: [],\n    };\n  }\n\n  /* courses = {\n   *  course = {\n   *     name: string\n   *     areas: array\n   *     period: int\n   *     semester: int \n   *     etc......\n   *  }\n   * }\n   * */\n\n  fixCourseDataTypes(course){\n\n    console.log(course);\n    return course;\n  };\n\n\n\n  componentDidMount() {\n    axios.get(\"http://localhost:5000/courses\").then((res) => {\n      const courses_mount = res.data;\n      const all_areas = [];\n      const courses = {\n        name: [],\n        course: [],\n      };\n      for (let i = 0; i < courses_mount.length; i++) {\n        const course = courses_mount[i];\n        if (!all_areas.includes(course.area)) {\n          all_areas.push(course.area);\n        }\n        if (!courses.name.includes(course.name)){\n          course = fixCourseDatatypes(course);\n          courses.name.push(course.name);\n          courses.course.push(course);\n        }\n        else{\n          var index = courses.name.indexOf(course.name);\n        }\n      }\n      //console.log(courses_mount.length);\n      //console.log(courses);\n      this.setState({ courses });\n      this.setState({ all_areas });\n    });\n  }\n\n\n\n\n  render(){\n    return <h1></h1>}\n}\n\n\nexport default CourseTableTest;\n"]},"metadata":{},"sourceType":"module"}