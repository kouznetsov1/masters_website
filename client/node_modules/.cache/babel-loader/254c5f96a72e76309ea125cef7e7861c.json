{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projects/masters_website/client/src/components/CourseTableTest.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport axios from \"axios\";\nimport Checkbox from \"./Checkbox.js\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getCourses from \"./functions/CourseGetter\";\n\nclass CourseTableTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      courses: [],\n      all_areas: [],\n      picked_courses: []\n    };\n  }\n\n  componentDidMount() {\n    const cocor = async () => await getCourses();\n\n    setTimeout(function () {\n      console.log(cocor);\n    }, 2000); //this.setState(courses = getCourses());\n\n    /*\n    axios.get(\"http://localhost:5000/courses\").then((res) => {\n      \n      const courses_mount = res.data;\n      const all_areas = [];\n      const courses = {\n        name: [],\n        course: [],\n      };\n      const dispatch = useDispatch();\n       for (let i = 0; i < courses_mount.length; i++) {\n        var course = courses_mount[i];\n         if (!all_areas.includes(course.area)) {\n          all_areas.push(course.area);\n        }\n         if (!courses.name.includes(course.name)) {\n          course = this.fixCourseDatatypes(course);\n          courses.name.push(course.name);\n          courses.course.push(course);\n          course.strike_through = false;\n        } else {\n          var index = courses.name.indexOf(course.name);\n           if (!courses.course[index].area.includes(course.area)) {\n            courses.course[index].area.push(course.area);\n          }\n           var dynamic_values = courses.course[index].dynamic_values;\n          var dyn_values = this.setDynamicValues(course);\n           courses.course[index].dynamic_values.push(dyn_values);\n           var dyn_val_unique = courses.course[index].dynamic_values.reduce(\n            (unique, o) => {\n              if (\n                !unique.some(\n                  (obj) =>\n                    obj.semester === o.semester &&\n                    obj.block === o.block &&\n                    obj.period === o.period\n                )\n              ) {\n                unique.push(o);\n              }\n              return unique;\n            },\n            []\n          );\n          courses.course[index].dynamic_values = dyn_val_unique;\n        }\n      }\n      this.setState({ courses });\n      this.setState({ all_areas });\n    });\n    */\n  }\n\n  setDynamicValues(course) {\n    var dynamic_values = {\n      semester: course.semester,\n      block: course.block,\n      period: course.period,\n      checked_here: false\n    };\n    return dynamic_values;\n  } // variable needs to be of type array for the ones below\n\n\n  fixCourseDatatypes(course) {\n    course.dynamic_values = [this.setDynamicValues(course)];\n    course.area = [course.area];\n    return course;\n  }\n\n  semester() {\n    var semester = 7;\n    var renderedSemesters = [];\n\n    do {\n      renderedSemesters.push( /*#__PURE__*/React.createElement(\"div\", {\n        id: \"accordion\",\n        className: \"full-table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-header\",\n        id: \"semester_\" + semester,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-link\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#collapse\" + semester,\n        \"aria-expanded\": \"true\",\n        \"aria-controls\": \"collapseOne\" + semester,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, \"Termin \", semester))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"collapse\" + semester,\n        className: \"collapse show\",\n        \"aria-labelledby\": \"semester_\" + semester,\n        \"data-parent\": \"#accordion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, this.areas(semester))))));\n      semester++;\n    } while (semester <= 9);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    }, renderedSemesters);\n  }\n\n  areas(semester) {\n    var renderedAreas = [];\n\n    for (let i = 0; i < this.state.all_areas.length; i++) {\n      const area = this.state.all_areas[i];\n\n      if (area !== \"\") {\n        renderedAreas.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"semester\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"area-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }\n        }, area), this.period(semester, area)));\n      } else {\n        renderedAreas.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"semester\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }\n        }, this.period(semester, area)));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 12\n      }\n    }, renderedAreas);\n  }\n\n  period(semester, area) {\n    var period = 1;\n    var renderedPeriods = [];\n\n    do {\n      renderedPeriods.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"periods\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"period_\" + period,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }\n      }, \"Period \", period), this.course(semester, area, period))));\n      period++;\n    } while (period <= 2); //this.setState({ courses });\n    //this.setState({ all_areas });\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 12\n      }\n    }, renderedPeriods);\n  }\n\n  course(semester, area, period) {\n    var renderedCourses = [];\n    var courses = this.state.courses;\n    var coursesToRender = [];\n\n    for (let i = 0; i < courses.name.length; i++) {\n      const course = courses.course[i];\n      const to_render = this.shallCourseRender(semester, period, course.dynamic_values);\n\n      if (to_render && course.area.includes(area)) {\n        coursesToRender.push(course);\n      }\n    }\n\n    renderedCourses.push( /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"Check\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, \"Kurskod\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, \"Kurs\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"Hp\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, \"Niv\\xE5\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"Block\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, \"VOF\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }, \"TEN\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, \"LAB\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, \"PRA\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \"UPG\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, \"KTR\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, \"HEM\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"BAS\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, coursesToRender.map(course => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      course: course,\n      semester: course.semester,\n      period: course.period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"5em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.google.com/search?q=\" + course.code + \"+liu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, course.code)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"40em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: course.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, course.name)), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"4em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, course.points), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"4em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }\n    }, course.level), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"5em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }, course.block), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"4em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, course.vof), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.exam)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.lab)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.project)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.upg)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.ktr)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.hem)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, this.examinationObject(course.bas)))))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 12\n      }\n    }, renderedCourses);\n  }\n\n  checkBox(courseCode, isPressed) {\n    const [pressed, setPressed] = this.useState(\"option1\");\n\n    if (isPressed) {\n      setPressed(\"option2\");\n    }\n\n    console.log(\"hej\");\n  }\n\n  examinationObject(examination) {\n    if (examination === true) {\n      return \"X\";\n    }\n\n    return;\n  }\n\n  shallCourseRender(semester, period, dyn_values) {\n    for (let i = 0; i < dyn_values.length; i++) {\n      if (dyn_values[i].semester === semester && dyn_values[i].period === period) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    var final_table = this.semester();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 12\n      }\n    }, final_table);\n  }\n\n}\n\nexport default CourseTableTest;","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/CourseTableTest.js"],"names":["React","useEffect","useState","axios","Checkbox","configureStore","useDispatch","useSelector","getCourses","CourseTableTest","Component","constructor","props","state","courses","all_areas","picked_courses","componentDidMount","cocor","setTimeout","console","log","setDynamicValues","course","dynamic_values","semester","block","period","checked_here","fixCourseDatatypes","area","renderedSemesters","push","areas","renderedAreas","i","length","renderedPeriods","renderedCourses","coursesToRender","name","to_render","shallCourseRender","includes","map","width","code","url","points","level","vof","examinationObject","exam","lab","project","upg","ktr","hem","bas","checkBox","courseCode","isPressed","pressed","setPressed","examination","dyn_values","render","final_table"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport axios from \"axios\";\nimport Checkbox from \"./Checkbox.js\";\nimport {configureStore} from '@reduxjs/toolkit'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getCourses from \"./functions/CourseGetter\";\n\nclass CourseTableTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      courses: [],\n      all_areas: [],\n      picked_courses: [],\n    };\n  }\n\n  componentDidMount() {\n    const cocor = async() => await getCourses();\n    setTimeout(function () {\n      console.log(cocor);\n    }, 2000);\n    //this.setState(courses = getCourses());\n    /*\n    axios.get(\"http://localhost:5000/courses\").then((res) => {\n      \n      const courses_mount = res.data;\n      const all_areas = [];\n      const courses = {\n        name: [],\n        course: [],\n      };\n      const dispatch = useDispatch();\n\n      for (let i = 0; i < courses_mount.length; i++) {\n        var course = courses_mount[i];\n\n        if (!all_areas.includes(course.area)) {\n          all_areas.push(course.area);\n        }\n\n        if (!courses.name.includes(course.name)) {\n          course = this.fixCourseDatatypes(course);\n          courses.name.push(course.name);\n          courses.course.push(course);\n          course.strike_through = false;\n        } else {\n          var index = courses.name.indexOf(course.name);\n\n          if (!courses.course[index].area.includes(course.area)) {\n            courses.course[index].area.push(course.area);\n          }\n\n          var dynamic_values = courses.course[index].dynamic_values;\n          var dyn_values = this.setDynamicValues(course);\n\n          courses.course[index].dynamic_values.push(dyn_values);\n\n          var dyn_val_unique = courses.course[index].dynamic_values.reduce(\n            (unique, o) => {\n              if (\n                !unique.some(\n                  (obj) =>\n                    obj.semester === o.semester &&\n                    obj.block === o.block &&\n                    obj.period === o.period\n                )\n              ) {\n                unique.push(o);\n              }\n              return unique;\n            },\n            []\n          );\n          courses.course[index].dynamic_values = dyn_val_unique;\n        }\n      }\n      this.setState({ courses });\n      this.setState({ all_areas });\n    });\n    */\n\n  }\n\n  setDynamicValues(course) {\n    var dynamic_values = {\n      semester: course.semester,\n      block: course.block,\n      period: course.period,\n      checked_here: false,\n    };\n    return dynamic_values;\n  }\n\n  // variable needs to be of type array for the ones below\n  fixCourseDatatypes(course) {\n    course.dynamic_values = [this.setDynamicValues(course)];\n    course.area = [course.area];\n    return course;\n  }\n\n  semester() {\n    var semester = 7;\n    var renderedSemesters = [];\n\n    do {\n      renderedSemesters.push(\n        <div id=\"accordion\" className=\"full-table\">\n          <div className=\"card\">\n            <div className=\"card-header\" id={\"semester_\" + semester}>\n              <h2 className=\"mb-0\">\n                <button\n                  className=\"btn btn-link\"\n                  data-toggle=\"collapse\"\n                  data-target={\"#collapse\" + semester}\n                  aria-expanded=\"true\"\n                  aria-controls={\"collapseOne\" + semester}\n                >\n                  Termin {semester}\n                </button>\n              </h2>\n            </div>\n\n            <div\n              id={\"collapse\" + semester}\n              className=\"collapse show\"\n              aria-labelledby={\"semester_\" + semester}\n              data-parent=\"#accordion\"\n            >\n              <div className=\"card-body\">{this.areas(semester)}</div>\n            </div>\n          </div>\n        </div>\n      );\n      semester++;\n    } while (semester <= 9);\n    return <div>{renderedSemesters}</div>;\n  }\n\n  areas(semester) {\n    var renderedAreas = [];\n\n    for (let i = 0; i < this.state.all_areas.length; i++) {\n      const area = this.state.all_areas[i];\n      if (area !== \"\"){\n        renderedAreas.push(\n          <div className={\"semester\"}>\n            <h3 className=\"area-header\">{area}</h3>\n            {this.period(semester, area)}\n          </div>\n        );\n      }\n      else{\n        renderedAreas.push(\n          <div className={\"semester\"}>\n            {this.period(semester,area)}\n          </div>\n        )\n      }\n    }\n    return <div>{renderedAreas}</div>;\n  }\n\n  period(semester, area) {\n    var period = 1;\n    var renderedPeriods = [];\n\n    do {\n      renderedPeriods.push(\n        <div className=\"periods\">\n          <div className={\"period_\" + period}>\n            <h5>Period {period}</h5>\n            {this.course(semester, area, period)}\n          </div>\n        </div>\n      );\n      period++;\n    } while (period <= 2);\n    //this.setState({ courses });\n    //this.setState({ all_areas });\n    return <div>{renderedPeriods}</div>;\n  }\n\n  course(semester, area, period) {\n    var renderedCourses = [];\n    var courses = this.state.courses;\n    var coursesToRender = [];\n\n    for (let i = 0; i < courses.name.length; i++) {\n      const course = courses.course[i];\n      const to_render = this.shallCourseRender(\n        semester,\n        period,\n        course.dynamic_values\n      );\n\n      if (to_render && course.area.includes(area)) {\n        coursesToRender.push(course);\n      }\n    }\n\n    renderedCourses.push(\n      <table className=\"table table-sm\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Check</th>\n            <th scope=\"col\">Kurskod</th>\n            <th scope=\"col\">Kurs</th>\n            <th scope=\"col\">Hp</th>\n            <th scope=\"col\">Nivå</th>\n            <th scope=\"col\">Block</th>\n            <th scope=\"col\">VOF</th>\n            <th scope=\"col\">TEN</th>\n            <th scope=\"col\">LAB</th>\n            <th scope=\"col\">PRA</th>\n            <th scope=\"col\">UPG</th>\n            <th scope=\"col\">KTR</th>\n            <th scope=\"col\">HEM</th>\n            <th scope=\"col\">BAS</th>\n          </tr>\n        </thead>\n        <tbody>\n          {coursesToRender.map((course) => (\n            <tr>\n              <Checkbox course={course}\n                semester={course.semester}\n                period={course.period}\n              />\n              {/*\n              <td style={{width: \"1.2em\"}}>\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"prop1\"\n                    id=\"string\"\n                    className=\"modal__checkbox-input\"\n                  />\n                </div>\n              </td>*/}\n              <td style={{width: \"5em\"}}>\n                <a\n                  href={\n                    \"http://www.google.com/search?q=\" + course.code + \"+liu\"\n                  }\n                >\n                  {course.code}\n                </a>\n              </td>\n              <td style={{width: \"40em\"}}>\n                <a href={course.url}>{course.name}</a>\n              </td>\n              <td style={{ width: \"4em\" }}>{course.points}</td>\n              <td style={{ width: \"4em\" }}>{course.level}</td>\n              <td style={{ width: \"5em\" }}>{course.block}</td>\n              <td style={{ width: \"4em\" }}>{course.vof}</td>\n              <td>{this.examinationObject(course.exam)}</td>\n              <td>{this.examinationObject(course.lab)}</td>\n              <td>{this.examinationObject(course.project)}</td>\n              <td>{this.examinationObject(course.upg)}</td>\n              <td>{this.examinationObject(course.ktr)}</td>\n              <td>{this.examinationObject(course.hem)}</td>\n              <td>{this.examinationObject(course.bas)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n    return <div>{renderedCourses}</div>;\n  }\n\n  checkBox(courseCode, isPressed) {\n    const [pressed, setPressed] = this.useState(\"option1\");\n\n    if (isPressed) {\n      setPressed(\"option2\");\n    }\n\n    console.log(\"hej\");\n  }\n\n  examinationObject(examination) {\n    if (examination === true){\n      return \"X\";\n    }\n    return;\n  }\n\n  shallCourseRender(semester, period, dyn_values) {\n    for (let i = 0; i < dyn_values.length; i++) {\n      if (\n        dyn_values[i].semester === semester &&\n        dyn_values[i].period === period\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  render() {\n    var final_table = this.semester();\n    return <div>{final_table}</div>;\n  }\n}\n\nexport default CourseTableTest;\n"]},"metadata":{},"sourceType":"module"}