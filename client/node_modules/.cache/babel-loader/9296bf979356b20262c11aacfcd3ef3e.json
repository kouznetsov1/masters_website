{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = props => {\n  _s();\n\n  const [courseState, setCourseState] = useState(props.course);\n  const dynamicValLength = courseState.dynamic_values.length;\n  useEffect(() => {\n    setCourseState(props.course);\n    console.log(\"useeffect\");\n\n    if (courseState.checked) {\n      for (let i = 0; i < dynamicValLength; i++) {\n        const dynVal = courseState.dynamic_values[i];\n\n        if (dynVal.semester === props.semester && dynVal.period === props.period && dynVal.checked_here) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mdc-checkbox\",\n            style: {\n              margin: \"auto\",\n              border: \"2px solid black\"\n            },\n            onClick: () => handleCheckboxClick(props.semester, props.period),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              class: \"mdc-checkbox__native-control\",\n              id: \"checkbox-1\",\n              checked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mdc-checkbox\",\n            style: {\n              margin: \"auto\",\n              border: \"2px solid black\"\n            },\n            onClick: () => handleCheckboxClick(props.semester, props.period),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              class: \"mdc-checkbox__native-control\",\n              id: \"checkbox-1\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this);\n        }\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mdc-checkbox\",\n        style: {\n          margin: \"auto\",\n          border: \"2px solid black\"\n        },\n        onClick: () => handleCheckboxClick(props.semester, props.period),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          class: \"mdc-checkbox__native-control\",\n          id: \"checkbox-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    }\n\n    console.log(courseState);\n  }, [courseState.checked]);\n\n  function handleCheckboxClick(semester, period) {\n    console.log(courseState.checked);\n\n    if (courseState.checked === true) {\n      console.log(\"HEj\");\n      setCourseState({\n        checked: true\n      });\n    } else {\n      console.log(\"HEj2\");\n      setCourseState({\n        checked: true\n      });\n      console.log(courseState);\n    }\n\n    for (let i = 0; i < dynamicValLength; i++) {\n      var dynVal = courseState.dynamic_values[i];\n\n      if (dynVal.semester === semester && dynVal.period === period && dynVal.checked_here) {\n        setCourseState({ ...courseState,\n          dynamic_values: [...courseState.dynamic_values, { ...dynVal,\n            checked_here: false\n          }]\n        });\n      }\n\n      if (dynVal.semester === semester && dynVal.period === period && !dynVal.checked_here) {\n        setCourseState({ ...courseState,\n          dynamic_values: [...courseState.dynamic_values, { ...dynVal,\n            checked_here: true\n          }]\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mdc-checkbox\",\n    style: {\n      margin: \"auto\",\n      border: \"2px solid black\"\n    },\n    onClick: () => handleCheckboxClick(props.semester, props.period),\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      class: \"mdc-checkbox__native-control\",\n      id: \"checkbox-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n/*\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      course: this.props.course,\n      semester: this.props.semester,\n      period: this.props.period,\n      checked: false,\n      checkedElsewhere: false,\n    };\n    this.onClickFunc = this.onClickFunc.bind(this);\n  }\n\n  onClickFunc(){\n    this.setState(prevState => ({checked: !prevState.checked}));\n    this.checkDynValues();\n  }\n\n  checkDynValues() {\n    const course = this.state.course;\n    const currSemester = this.state.semester;\n    const currPeriod = this.state.period;\n    console.log(course);\n\n    \n    for (let i = 0; i < course.dynamic_values.length; i++) {\n      const dynValues = course.dynamic_values[i];\n      if (dynValues.period === currPeriod && dynValues.semester === currSemester){\n        course.dynamic_values[i].checked_here = true;\n      }\n    };\n\n  }\n\n  render() {\n    return <input\n      name=\"checkbox\"\n      type=\"checkbox\"\n      checked={this.state.checked}\n      onChange={this.handleInputChange}\n      onClick={this.onClickFunc}\n      />;\n  }\n}*/\n\n\n_s(Checkbox, \"gRukLdYc0wdckrOGOhxowaW/b9Q=\");\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js"],"names":["React","useEffect","useState","Checkbox","props","courseState","setCourseState","course","dynamicValLength","dynamic_values","length","console","log","checked","i","dynVal","semester","period","checked_here","margin","border","handleCheckboxClick"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n\nconst Checkbox = (props) => {\n  const [courseState, setCourseState] = useState(props.course);\n  const dynamicValLength = courseState.dynamic_values.length;\n\n  useEffect(() => {\n    setCourseState(props.course);\n\n    console.log(\"useeffect\");\n\n    if (courseState.checked){\n      for (let i = 0; i < dynamicValLength; i++) {\n        const dynVal = courseState.dynamic_values[i];\n  \n        if (dynVal.semester === props.semester && dynVal.period === props.period && dynVal.checked_here){\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   checked\n                   />\n          </div>\n          )\n        }\n        else{\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   disabled\n                   />\n          </div>\n          )\n        }\n      }\n    }\n    else{\n      return (\n        <div \n        class=\"mdc-checkbox\"\n        style={{margin: \"auto\", border: \"2px solid black\"}}\n        onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\"\n               class=\"mdc-checkbox__native-control\"\n               id=\"checkbox-1\"\n               />\n      </div>\n      )\n    }\n\n    console.log(courseState);\n\n  }, [courseState.checked]);\n\n  function handleCheckboxClick(semester, period) {\n    console.log(courseState.checked);\n    if (courseState.checked === true){\n      console.log(\"HEj\");\n      setCourseState({checked: true});\n    }\n    else{\n      console.log(\"HEj2\");\n      setCourseState({checked: true});\n      console.log(courseState);\n    }\n\n    \n    for(let i = 0; i < dynamicValLength; i++){\n      var dynVal = courseState.dynamic_values[i];\n      if (dynVal.semester === semester && dynVal.period === period && dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: false}]});\n      }\n      if (dynVal.semester === semester && dynVal.period === period && !dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: true}]});\n      }\n    }\n  }\n\n  \n  return (\n    <div \n    class=\"mdc-checkbox\"\n    style={{margin: \"auto\", border: \"2px solid black\"}}\n    onClick={() => handleCheckboxClick(props.semester, props.period)}>\n    <input type=\"checkbox\"\n           class=\"mdc-checkbox__native-control\"\n           id=\"checkbox-1\"\n           />\n  </div>\n  )\n}\n\n/*\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      course: this.props.course,\n      semester: this.props.semester,\n      period: this.props.period,\n      checked: false,\n      checkedElsewhere: false,\n    };\n    this.onClickFunc = this.onClickFunc.bind(this);\n  }\n\n  onClickFunc(){\n    this.setState(prevState => ({checked: !prevState.checked}));\n    this.checkDynValues();\n  }\n\n  checkDynValues() {\n    const course = this.state.course;\n    const currSemester = this.state.semester;\n    const currPeriod = this.state.period;\n    console.log(course);\n\n    \n    for (let i = 0; i < course.dynamic_values.length; i++) {\n      const dynValues = course.dynamic_values[i];\n      if (dynValues.period === currPeriod && dynValues.semester === currSemester){\n        course.dynamic_values[i].checked_here = true;\n      }\n    };\n\n  }\n\n  render() {\n    return <input\n      name=\"checkbox\"\n      type=\"checkbox\"\n      checked={this.state.checked}\n      onChange={this.handleInputChange}\n      onClick={this.onClickFunc}\n      />;\n  }\n}*/\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}