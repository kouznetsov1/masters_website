{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { courses as coursesAtom } from \"../atoms.js\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = props => {\n  _s();\n\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n  const courseState = courses.course[props.course.id - 8];\n\n  function handleCheckboxClick(semester, period) {\n    setCourses(originalState => {\n      const newState = cloneDeep({ ...originalState\n      });\n      const course = newState.course[props.course.id - 8];\n\n      if (course.checked === true) {\n        course.checked = false;\n\n        for (var i = 0; i < course.dynamic_values.length; i++) {\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = false;\n          }\n        }\n      } else {\n        course.checked = true;\n\n        for (var i = 0; i < course.dynamic_values.length; i++) {\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = true;\n          }\n        }\n      }\n\n      return newState;\n    });\n  }\n\n  useEffect(() => {\n    if (courseState) {\n      if (courseState.checked) {\n        if (props.semester === courseState.semester && props.period === courseState.period) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mdc-checkbox\",\n            style: {\n              margin: \"auto\",\n              border: \"2px solid black\"\n            },\n            onClick: () => handleCheckboxClick(props.semester, props.period),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mdc-checkbox__native-control\",\n              id: \"checkbox-1\",\n              checked: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mdc-checkbox mdc-checkbox--disabled\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"basic-disabled-checkbox\",\n              className: \"mdc-checkbox__native-control\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this);\n        }\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mdc-checkbox\",\n          style: {\n            margin: \"auto\",\n            border: \"2px solid black\"\n          },\n          onClick: () => handleCheckboxClick(props.semester, props.period),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"mdc-checkbox__native-control\",\n            id: \"checkbox-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }, [courses]);\n  console.log(props.course);\n  console.log(courseState);\n  console.log(courses.course);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n  /*\n  const [courseState, setCourseState] = useState(props.course);\n  const dynamicValLength = courseState.dynamic_values.length;\n   const [newCourseState, setNewCourseState] = useRecoilState(coursesAtom);\n   useEffect(() => {\n    setCourseState(props.course);\n     console.log(\"useeffect\");\n     courseChanged();\n   }, []);\n   function handleCheckboxClick(semester, period) {\n    console.log(courseState.checked);\n    if (courseState.checked === true){\n      console.log(\"HEj\");\n      //setCourseState({checked: true});\n    }\n    else{\n      console.log(\"HEj2\");\n      setCourseState({checked: true});\n      console.log(courseState);\n    }\n     \n    for(let i = 0; i < dynamicValLength; i++){\n      var dynVal = courseState.dynamic_values[i];\n      if (dynVal.semester === semester && dynVal.period === period && dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: false}]});\n      }\n      if (dynVal.semester === semester && dynVal.period === period && !dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: true}]});\n      }\n    }\n  }\n   function courseChanged(){\n    if (courseState.checked){\n      for (let i = 0; i < dynamicValLength; i++) {\n        const dynVal = courseState.dynamic_values[i];\n  \n        if (dynVal.semester === props.semester && dynVal.period === props.period && dynVal.checked_here){\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   checked\n                   />\n          </div>\n          )\n        }\n        else{\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   disabled\n                   />\n          </div>\n          )\n        }\n      }\n    }\n    else{\n      return (\n        <div \n        class=\"mdc-checkbox\"\n        style={{margin: \"auto\", border: \"2px solid black\"}}\n        onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\"\n               class=\"mdc-checkbox__native-control\"\n               id=\"checkbox-1\"\n               />\n      </div>\n      )\n    }\n  }\n   \n  return (\n    <div \n    class=\"mdc-checkbox\"\n    style={{margin: \"auto\", border: \"2px solid black\"}}\n    onClick={() => handleCheckboxClick(props.semester, props.period)}>\n    <input type=\"checkbox\"\n           class=\"mdc-checkbox__native-control\"\n           id=\"checkbox-1\"\n           />\n  </div>\n  )\n  */\n};\n/*\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      course: this.props.course,\n      semester: this.props.semester,\n      period: this.props.period,\n      checked: false,\n      checkedElsewhere: false,\n    };\n    this.onClickFunc = this.onClickFunc.bind(this);\n  }\n\n  onClickFunc(){\n    this.setState(prevState => ({checked: !prevState.checked}));\n    this.checkDynValues();\n  }\n\n  checkDynValues() {\n    const course = this.state.course;\n    const currSemester = this.state.semester;\n    const currPeriod = this.state.period;\n    console.log(course);\n\n    \n    for (let i = 0; i < course.dynamic_values.length; i++) {\n      const dynValues = course.dynamic_values[i];\n      if (dynValues.period === currPeriod && dynValues.semester === currSemester){\n        course.dynamic_values[i].checked_here = true;\n      }\n    };\n\n  }\n\n  render() {\n    return <input\n      name=\"checkbox\"\n      type=\"checkbox\"\n      checked={this.state.checked}\n      onChange={this.handleInputChange}\n      onClick={this.onClickFunc}\n      />;\n  }\n}*/\n\n\n_s(Checkbox, \"mGaaJaXAyBE8hprTfIzGQ7Ap/6M=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js"],"names":["React","useEffect","useState","useRecoilState","courses","coursesAtom","cloneDeep","Checkbox","props","setCourses","courseState","course","id","handleCheckboxClick","semester","period","originalState","newState","checked","i","dynamic_values","length","checked_here","margin","border","console","log"],"mappings":"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A,IAAI,EAAC,UAAZ;AACA,YAAA,SAAS,EAAC,8BADV;AAEA,YAAA,EAAE,EAAC;AAFH;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;AACF;AACF,GA5CQ,EA4CN,CAACX,OAAD,CA5CM,CAAT;AA+CAqB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACG,MAAlB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYtB,OAAO,CAACO,MAApB;AACA,szLD;AA2LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxOMJ,Q;UAC0BJ,c;;;KAD1BI,Q;AA0ON,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport {courses as coursesAtom} from \"../atoms.js\";\nimport cloneDeep from \"lodash/cloneDeep\";\n\n\nconst Checkbox = (props) => {\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n  const courseState = courses.course[props.course.id-8];\n\n\n  function handleCheckboxClick(semester, period) {\n    setCourses(originalState => {\n      const newState = cloneDeep({ ...originalState });\n      const course = newState.course[props.course.id-8];\n      \n      if (course.checked === true) {\n        course.checked = false;\n        for (var i = 0; i < course.dynamic_values.length; i++){\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = false;\n          }\n        }\n      } else {\n        course.checked = true;\n        for (var i = 0; i < course.dynamic_values.length; i++){\n          if (course.dynamic_values[i].semester === semester && course.dynamic_values[i].period === period) {\n            course.dynamic_values[i].checked_here = true;\n          }\n        }\n      }\n\n      return newState;\n    });\n  }\n\n  useEffect(() => {\n    if (courseState){\n      if (courseState.checked) {\n        if (props.semester === courseState.semester && props.period === courseState.period) {\n          return (\n            <div\n              className=\"mdc-checkbox\"\n              style={{ margin: \"auto\", border: \"2px solid black\" }}\n              onClick={() => handleCheckboxClick(props.semester, props.period)}\n            >\n              <input\n                type=\"checkbox\"\n                className=\"mdc-checkbox__native-control\"\n                id=\"checkbox-1\"\n                checked\n              />\n            </div>\n          );\n        }\n        else {\n          return (\n            <div className=\"mdc-checkbox mdc-checkbox--disabled\">\n              <input\n                type=\"checkbox\"\n                id=\"basic-disabled-checkbox\"\n                className=\"mdc-checkbox__native-control\"\n                disabled\n              />\n            </div>\n          );\n        }\n      }\n      else {\n        return (\n          <div className=\"mdc-checkbox\" \n          style={{ margin: \"auto\", border: \"2px solid black\" }} \n          onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\" \n            className=\"mdc-checkbox__native-control\" \n            id=\"checkbox-1\" />\n          </div>\n        );\n      }\n    }\n  }, [courses]);\n\n\n  console.log(props.course);\n  console.log(courseState);\n  console.log(courses.course);\n  return <p>Loading...</p>\n\n\n  /*\n  const [courseState, setCourseState] = useState(props.course);\n  const dynamicValLength = courseState.dynamic_values.length;\n\n  const [newCourseState, setNewCourseState] = useRecoilState(coursesAtom);\n\n  useEffect(() => {\n    setCourseState(props.course);\n\n    console.log(\"useeffect\");\n\n    courseChanged();\n\n  }, []);\n\n  function handleCheckboxClick(semester, period) {\n    console.log(courseState.checked);\n    if (courseState.checked === true){\n      console.log(\"HEj\");\n      //setCourseState({checked: true});\n    }\n    else{\n      console.log(\"HEj2\");\n      setCourseState({checked: true});\n      console.log(courseState);\n    }\n\n    \n    for(let i = 0; i < dynamicValLength; i++){\n      var dynVal = courseState.dynamic_values[i];\n      if (dynVal.semester === semester && dynVal.period === period && dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: false}]});\n      }\n      if (dynVal.semester === semester && dynVal.period === period && !dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: true}]});\n      }\n    }\n  }\n\n  function courseChanged(){\n    if (courseState.checked){\n      for (let i = 0; i < dynamicValLength; i++) {\n        const dynVal = courseState.dynamic_values[i];\n  \n        if (dynVal.semester === props.semester && dynVal.period === props.period && dynVal.checked_here){\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   checked\n                   />\n          </div>\n          )\n        }\n        else{\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   disabled\n                   />\n          </div>\n          )\n        }\n      }\n    }\n    else{\n      return (\n        <div \n        class=\"mdc-checkbox\"\n        style={{margin: \"auto\", border: \"2px solid black\"}}\n        onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\"\n               class=\"mdc-checkbox__native-control\"\n               id=\"checkbox-1\"\n               />\n      </div>\n      )\n    }\n  }\n\n  \n  return (\n    <div \n    class=\"mdc-checkbox\"\n    style={{margin: \"auto\", border: \"2px solid black\"}}\n    onClick={() => handleCheckboxClick(props.semester, props.period)}>\n    <input type=\"checkbox\"\n           class=\"mdc-checkbox__native-control\"\n           id=\"checkbox-1\"\n           />\n  </div>\n  )\n  */\n}\n\n/*\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      course: this.props.course,\n      semester: this.props.semester,\n      period: this.props.period,\n      checked: false,\n      checkedElsewhere: false,\n    };\n    this.onClickFunc = this.onClickFunc.bind(this);\n  }\n\n  onClickFunc(){\n    this.setState(prevState => ({checked: !prevState.checked}));\n    this.checkDynValues();\n  }\n\n  checkDynValues() {\n    const course = this.state.course;\n    const currSemester = this.state.semester;\n    const currPeriod = this.state.period;\n    console.log(course);\n\n    \n    for (let i = 0; i < course.dynamic_values.length; i++) {\n      const dynValues = course.dynamic_values[i];\n      if (dynValues.period === currPeriod && dynValues.semester === currSemester){\n        course.dynamic_values[i].checked_here = true;\n      }\n    };\n\n  }\n\n  render() {\n    return <input\n      name=\"checkbox\"\n      type=\"checkbox\"\n      checked={this.state.checked}\n      onChange={this.handleInputChange}\n      onClick={this.onClickFunc}\n      />;\n  }\n}*/\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}