{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { courses as coursesAtom } from \"../atoms.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Checkbox = props => {\n  _s();\n\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n\n  function handleCheckboxClick(semester, period) {\n    setCourses(originalState => {\n      const newState = { ...originalState\n      };\n      console.log(newState.course[0].name);\n      return newState;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"mdc-checkbox\",\n    style: {\n      margin: \"auto\",\n      border: \"2px solid black\"\n    },\n    onClick: () => handleCheckboxClick(props.semester, props.period),\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      class: \"mdc-checkbox__native-control\",\n      id: \"checkbox-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n  /*\n  const [courseState, setCourseState] = useState(props.course);\n  const dynamicValLength = courseState.dynamic_values.length;\n   const [newCourseState, setNewCourseState] = useRecoilState(coursesAtom);\n   useEffect(() => {\n    setCourseState(props.course);\n     console.log(\"useeffect\");\n     courseChanged();\n   }, []);\n   function handleCheckboxClick(semester, period) {\n    console.log(courseState.checked);\n    if (courseState.checked === true){\n      console.log(\"HEj\");\n      //setCourseState({checked: true});\n    }\n    else{\n      console.log(\"HEj2\");\n      setCourseState({checked: true});\n      console.log(courseState);\n    }\n     \n    for(let i = 0; i < dynamicValLength; i++){\n      var dynVal = courseState.dynamic_values[i];\n      if (dynVal.semester === semester && dynVal.period === period && dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: false}]});\n      }\n      if (dynVal.semester === semester && dynVal.period === period && !dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: true}]});\n      }\n    }\n  }\n   function courseChanged(){\n    if (courseState.checked){\n      for (let i = 0; i < dynamicValLength; i++) {\n        const dynVal = courseState.dynamic_values[i];\n  \n        if (dynVal.semester === props.semester && dynVal.period === props.period && dynVal.checked_here){\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   checked\n                   />\n          </div>\n          )\n        }\n        else{\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   disabled\n                   />\n          </div>\n          )\n        }\n      }\n    }\n    else{\n      return (\n        <div \n        class=\"mdc-checkbox\"\n        style={{margin: \"auto\", border: \"2px solid black\"}}\n        onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\"\n               class=\"mdc-checkbox__native-control\"\n               id=\"checkbox-1\"\n               />\n      </div>\n      )\n    }\n  }\n   \n  return (\n    <div \n    class=\"mdc-checkbox\"\n    style={{margin: \"auto\", border: \"2px solid black\"}}\n    onClick={() => handleCheckboxClick(props.semester, props.period)}>\n    <input type=\"checkbox\"\n           class=\"mdc-checkbox__native-control\"\n           id=\"checkbox-1\"\n           />\n  </div>\n  )\n  */\n};\n/*\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      course: this.props.course,\n      semester: this.props.semester,\n      period: this.props.period,\n      checked: false,\n      checkedElsewhere: false,\n    };\n    this.onClickFunc = this.onClickFunc.bind(this);\n  }\n\n  onClickFunc(){\n    this.setState(prevState => ({checked: !prevState.checked}));\n    this.checkDynValues();\n  }\n\n  checkDynValues() {\n    const course = this.state.course;\n    const currSemester = this.state.semester;\n    const currPeriod = this.state.period;\n    console.log(course);\n\n    \n    for (let i = 0; i < course.dynamic_values.length; i++) {\n      const dynValues = course.dynamic_values[i];\n      if (dynValues.period === currPeriod && dynValues.semester === currSemester){\n        course.dynamic_values[i].checked_here = true;\n      }\n    };\n\n  }\n\n  render() {\n    return <input\n      name=\"checkbox\"\n      type=\"checkbox\"\n      checked={this.state.checked}\n      onChange={this.handleInputChange}\n      onClick={this.onClickFunc}\n      />;\n  }\n}*/\n\n\n_s(Checkbox, \"QAjJ58HrXrXNPoHkhHJwWKtk/MA=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = Checkbox;\nexport default Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/Checkbox.js"],"names":["React","useEffect","useState","useRecoilState","courses","coursesAtom","Checkbox","props","setCourses","handleCheckboxClick","semester","period","originalState","newState","console","log","course","name","margin","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,aAArC;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACH,OAAD,EAAUI,UAAV,IAAwBL,cAAc,CAACE,WAAD,CAA5C;;AAGA,WAASI,mBAAT,CAA6BC,QAA7B,EAAuCC,MAAvC,EAA+C;AAC7CH,IAAAA,UAAU,CAACI,aAAa,IAAI;AAC1B,YAAMC,QAAQ,GAAG,EAAE,GAAGD;AAAL,OAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC,IAA/B;AACA,aAAOJ,QAAP;AACD,KAJS,CAAV;AAKD;;AAED,sBACE;AACA,IAAA,KAAK,EAAC,cADN;AAEA,IAAA,KAAK,EAAE;AAACK,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAFP;AAGA,IAAA,OAAO,EAAE,MAAMV,mBAAmB,CAACF,KAAK,CAACG,QAAP,EAAiBH,KAAK,CAACI,MAAvB,CAHlC;AAAA,2BAIA;AAAO,MAAA,IAAI,EAAC,UAAZ;AACO,MAAA,KAAK,EAAC,8BADb;AAEO,MAAA,EAAE,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,UADF;AAaA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUC,CA/HD;AAiIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA9KML,Q;UAC0BH,c;;;KAD1BG,Q;AAgLN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport {courses as coursesAtom} from \"../atoms.js\";\n\n\nconst Checkbox = (props) => {\n  const [courses, setCourses] = useRecoilState(coursesAtom);\n\n\n  function handleCheckboxClick(semester, period) {\n    setCourses(originalState => {\n      const newState = { ...originalState };\n      console.log(newState.course[0].name);\n      return newState;\n    });\n  }\n\n  return (\n    <div \n    class=\"mdc-checkbox\"\n    style={{margin: \"auto\", border: \"2px solid black\"}}\n    onClick={() => handleCheckboxClick(props.semester, props.period)}>\n    <input type=\"checkbox\"\n           class=\"mdc-checkbox__native-control\"\n           id=\"checkbox-1\"\n           />\n  </div>\n  )\n\n\n  /*\n  const [courseState, setCourseState] = useState(props.course);\n  const dynamicValLength = courseState.dynamic_values.length;\n\n  const [newCourseState, setNewCourseState] = useRecoilState(coursesAtom);\n\n  useEffect(() => {\n    setCourseState(props.course);\n\n    console.log(\"useeffect\");\n\n    courseChanged();\n\n  }, []);\n\n  function handleCheckboxClick(semester, period) {\n    console.log(courseState.checked);\n    if (courseState.checked === true){\n      console.log(\"HEj\");\n      //setCourseState({checked: true});\n    }\n    else{\n      console.log(\"HEj2\");\n      setCourseState({checked: true});\n      console.log(courseState);\n    }\n\n    \n    for(let i = 0; i < dynamicValLength; i++){\n      var dynVal = courseState.dynamic_values[i];\n      if (dynVal.semester === semester && dynVal.period === period && dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: false}]});\n      }\n      if (dynVal.semester === semester && dynVal.period === period && !dynVal.checked_here){\n        setCourseState({...courseState, dynamic_values: [...courseState.dynamic_values, {...dynVal, checked_here: true}]});\n      }\n    }\n  }\n\n  function courseChanged(){\n    if (courseState.checked){\n      for (let i = 0; i < dynamicValLength; i++) {\n        const dynVal = courseState.dynamic_values[i];\n  \n        if (dynVal.semester === props.semester && dynVal.period === props.period && dynVal.checked_here){\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   checked\n                   />\n          </div>\n          )\n        }\n        else{\n          return (\n            <div \n            class=\"mdc-checkbox\"\n            style={{margin: \"auto\", border: \"2px solid black\"}}\n            onClick={() => handleCheckboxClick(props.semester, props.period)}>\n            <input type=\"checkbox\"\n                   class=\"mdc-checkbox__native-control\"\n                   id=\"checkbox-1\"\n                   disabled\n                   />\n          </div>\n          )\n        }\n      }\n    }\n    else{\n      return (\n        <div \n        class=\"mdc-checkbox\"\n        style={{margin: \"auto\", border: \"2px solid black\"}}\n        onClick={() => handleCheckboxClick(props.semester, props.period)}>\n        <input type=\"checkbox\"\n               class=\"mdc-checkbox__native-control\"\n               id=\"checkbox-1\"\n               />\n      </div>\n      )\n    }\n  }\n\n  \n  return (\n    <div \n    class=\"mdc-checkbox\"\n    style={{margin: \"auto\", border: \"2px solid black\"}}\n    onClick={() => handleCheckboxClick(props.semester, props.period)}>\n    <input type=\"checkbox\"\n           class=\"mdc-checkbox__native-control\"\n           id=\"checkbox-1\"\n           />\n  </div>\n  )\n  */\n}\n\n/*\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      course: this.props.course,\n      semester: this.props.semester,\n      period: this.props.period,\n      checked: false,\n      checkedElsewhere: false,\n    };\n    this.onClickFunc = this.onClickFunc.bind(this);\n  }\n\n  onClickFunc(){\n    this.setState(prevState => ({checked: !prevState.checked}));\n    this.checkDynValues();\n  }\n\n  checkDynValues() {\n    const course = this.state.course;\n    const currSemester = this.state.semester;\n    const currPeriod = this.state.period;\n    console.log(course);\n\n    \n    for (let i = 0; i < course.dynamic_values.length; i++) {\n      const dynValues = course.dynamic_values[i];\n      if (dynValues.period === currPeriod && dynValues.semester === currSemester){\n        course.dynamic_values[i].checked_here = true;\n      }\n    };\n\n  }\n\n  render() {\n    return <input\n      name=\"checkbox\"\n      type=\"checkbox\"\n      checked={this.state.checked}\n      onChange={this.handleInputChange}\n      onClick={this.onClickFunc}\n      />;\n  }\n}*/\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}