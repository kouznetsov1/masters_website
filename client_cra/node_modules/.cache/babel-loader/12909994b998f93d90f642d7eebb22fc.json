{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/Projects/masters_website/client/src/components/CourseTable.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport Checkbox from \"./Checkbox.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseTable = () => {\n  return Semester();\n};\n\n_c = CourseTable;\n\nconst Semester = () => {\n  var semester = 7;\n  var renderedSemesters = [];\n\n  do {\n    renderedSemesters.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"accordion\",\n      className: \"full-table\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          id: \"semester_\" + semester,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link\",\n              \"data-toggle\": \"collapse\",\n              \"data-target\": \"#collapse\" + semester,\n              \"aria-expanded\": \"true\",\n              \"aria-controls\": \"collapseOne\" + semester,\n              children: [\"Termin \", semester]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapse\" + semester,\n          className: \"collapse show\",\n          \"aria-labelledby\": \"semester_\" + semester,\n          \"data-parent\": \"#accordion\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: Areas(semester)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this));\n    semester++;\n  } while (semester <= 9);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedSemesters\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = Semester;\n\nconst Areas = semester => {\n  var renderedAreas = [];\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"areas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n  /*\n  // SET AREAS \n  for (let i = 0; i < this.state.all_areas.length; i++) {\n    const area = this.state.all_areas[i];\n    if (area !== \"\"){\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          <h3 className=\"area-header\">{area}</h3>\n          {Period(semester, area)}\n        </div>\n      );\n    }\n    else{\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          {this.period(semester,area)}\n        </div>\n      )\n    }\n  }\n  return <div>{renderedAreas}</div>;*/\n};\n\n_c3 = Areas;\n\nconst Period = (semester, area) => {\n  var period = 1;\n  var renderedPeriods = [];\n\n  do {\n    renderedPeriods.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"periods\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"period_\" + period,\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Period \", period]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this));\n    period++;\n  } while (period <= 2);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedPeriods\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n/*\nconst Course = (semester, area, period) => {\n  var renderedCourses = [];\n  var coursesToRender = [];\n\n  for (let i = 0; i < courses.name.length; i++) {\n    const course = courses.course[i];\n    const to_render = shallCourseRender(\n      semester,\n      period,\n      course.dynamic_values\n    );\n\n    if (to_render && course.area.includes(area)) {\n      coursesToRender.push(course);\n    }\n  }\n\n  renderedCourses.push(\n    <table className=\"table table-sm\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Check</th>\n          <th scope=\"col\">Kurskod</th>\n          <th scope=\"col\">Kurs</th>\n          <th scope=\"col\">Hp</th>\n          <th scope=\"col\">Niv√•</th>\n          <th scope=\"col\">Block</th>\n          <th scope=\"col\">VOF</th>\n          <th scope=\"col\">TEN</th>\n          <th scope=\"col\">LAB</th>\n          <th scope=\"col\">PRA</th>\n          <th scope=\"col\">UPG</th>\n          <th scope=\"col\">KTR</th>\n          <th scope=\"col\">HEM</th>\n          <th scope=\"col\">BAS</th>\n        </tr>\n      </thead>\n      <tbody>\n        {coursesToRender.map((course) => (\n          <tr>\n            <Checkbox course={course}\n              semester={course.semester}\n              period={course.period}\n            />\n            {\n            <td style={{width: \"1.2em\"}}>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  name=\"prop1\"\n                  id=\"string\"\n                  className=\"modal__checkbox-input\"\n                />\n              </div>\n            </td>}\n            <td style={{width: \"5em\"}}>\n              <a\n                href={\n                  \"http://www.google.com/search?q=\" + course.code + \"+liu\"\n                }\n              >\n                {course.code}\n              </a>\n            </td>\n            <td style={{width: \"40em\"}}>\n              <a href={course.url}>{course.name}</a>\n            </td>\n            <td style={{ width: \"4em\" }}>{course.points}</td>\n            <td style={{ width: \"4em\" }}>{course.level}</td>\n            <td style={{ width: \"5em\" }}>{course.block}</td>\n            <td style={{ width: \"4em\" }}>{course.vof}</td>\n            <td>{this.examinationObject(course.exam)}</td>\n            <td>{this.examinationObject(course.lab)}</td>\n            <td>{this.examinationObject(course.project)}</td>\n            <td>{this.examinationObject(course.upg)}</td>\n            <td>{this.examinationObject(course.ktr)}</td>\n            <td>{this.examinationObject(course.hem)}</td>\n            <td>{this.examinationObject(course.bas)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n  return <div>{renderedCourses}</div>;\n}\n\nconst ExaminationObject = (examination) => {\n  if (examination === true){\n    return \"X\";\n  }\n  return;\n}\n\nconst shallCourseRender = ((semester, period, dyn_values) => {\n  for (let i = 0; i < dyn_values.length; i++) {\n    if (\n      dyn_values[i].semester === semester &&\n      dyn_values[i].period === period\n    ) {\n      return true;\n    }\n  }\n  return false;\n});*/\n\n\n_c4 = Period;\nexport default CourseTable;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CourseTable\");\n$RefreshReg$(_c2, \"Semester\");\n$RefreshReg$(_c3, \"Areas\");\n$RefreshReg$(_c4, \"Period\");","map":{"version":3,"sources":["/home/daniel/Documents/Projects/masters_website/client/src/components/CourseTable.js"],"names":["React","useEffect","useState","Checkbox","CourseTable","Semester","semester","renderedSemesters","push","Areas","renderedAreas","Period","area","period","renderedPeriods"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAOC,QAAQ,EAAf;AACD,CAFD;;KAAMD,W;;AAIN,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,iBAAiB,GAAG,EAAxB;;AAGA,KAAG;AACDA,IAAAA,iBAAiB,CAACC,IAAlB,eACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,SAAS,EAAC,YAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAA6B,UAAA,EAAE,EAAE,cAAcF,QAA/C;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,cADZ;AAEE,6BAAY,UAFd;AAGE,6BAAa,cAAcA,QAH7B;AAIE,+BAAc,MAJhB;AAKE,+BAAe,gBAAgBA,QALjC;AAAA,oCAOUA,QAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE;AACE,UAAA,EAAE,EAAE,aAAaA,QADnB;AAEE,UAAA,SAAS,EAAC,eAFZ;AAGE,6BAAiB,cAAcA,QAHjC;AAIE,yBAAY,YAJd;AAAA,iCAME;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBAA4BG,KAAK,CAACH,QAAD;AAAjC;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA4BAA,IAAAA,QAAQ;AACT,GA9BD,QA8BSA,QAAQ,IAAI,CA9BrB;;AA+BA,sBAAO;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArCD;;MAAMF,Q;;AAuCN,MAAMI,KAAK,GAAIH,QAAD,IAAc;AAC1B,MAAII,aAAa,GAAG,EAApB;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CA1BD;;MAAMD,K;;AA4BN,MAAME,MAAM,GAAG,CAACL,QAAD,EAAWM,IAAX,KAAoB;AACjC,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,eAAe,GAAG,EAAtB;;AAEA,KAAG;AACDA,IAAAA,eAAe,CAACN,IAAhB,eACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,YAAYK,MAA5B;AAAA,+BACE;AAAA,gCAAYA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQAA,IAAAA,MAAM;AACP,GAVD,QAUSA,MAAM,IAAI,CAVnB;;AAWA,sBAAO;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBD;AAizHMH,M;AA2HN,eAAeP,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./CourseTable.css\";\nimport Checkbox from \"./Checkbox.js\";\n\nconst CourseTable = () => {\n  return Semester();\n}\n\nconst Semester = () => {\n  var semester = 7;\n  var renderedSemesters = [];\n\n  \n  do {\n    renderedSemesters.push(\n      <div id=\"accordion\" className=\"full-table\">\n        <div className=\"card\">\n          <div className=\"card-header\" id={\"semester_\" + semester}>\n            <h2 className=\"mb-0\">\n              <button\n                className=\"btn btn-link\"\n                data-toggle=\"collapse\"\n                data-target={\"#collapse\" + semester}\n                aria-expanded=\"true\"\n                aria-controls={\"collapseOne\" + semester}\n              >\n                Termin {semester}\n              </button>\n            </h2>\n          </div>\n\n          <div\n            id={\"collapse\" + semester}\n            className=\"collapse show\"\n            aria-labelledby={\"semester_\" + semester}\n            data-parent=\"#accordion\"\n          >\n            <div className=\"card-body\">{Areas(semester)}</div>\n          </div>\n        </div>\n      </div>\n    );\n    semester++;\n  } while (semester <= 9);\n  return <div>{renderedSemesters}</div>;\n}\n\nconst Areas = (semester) => {\n  var renderedAreas = [];\n\n  return <p>areas</p>;\n\n  /*\n  // SET AREAS \n  for (let i = 0; i < this.state.all_areas.length; i++) {\n    const area = this.state.all_areas[i];\n    if (area !== \"\"){\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          <h3 className=\"area-header\">{area}</h3>\n          {Period(semester, area)}\n        </div>\n      );\n    }\n    else{\n      renderedAreas.push(\n        <div className={\"semester\"}>\n          {this.period(semester,area)}\n        </div>\n      )\n    }\n  }\n  return <div>{renderedAreas}</div>;*/\n}\n\nconst Period = (semester, area) => {\n  var period = 1;\n  var renderedPeriods = [];\n\n  do {\n    renderedPeriods.push(\n      <div className=\"periods\">\n        <div className={\"period_\" + period}>\n          <h5>Period {period}</h5>\n          {/*Course(semester, area, period)*/}\n        </div>\n      </div>\n    );\n    period++;\n  } while (period <= 2);\n  return <div>{renderedPeriods}</div>;\n}\n/*\nconst Course = (semester, area, period) => {\n  var renderedCourses = [];\n  var coursesToRender = [];\n\n  for (let i = 0; i < courses.name.length; i++) {\n    const course = courses.course[i];\n    const to_render = shallCourseRender(\n      semester,\n      period,\n      course.dynamic_values\n    );\n\n    if (to_render && course.area.includes(area)) {\n      coursesToRender.push(course);\n    }\n  }\n\n  renderedCourses.push(\n    <table className=\"table table-sm\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Check</th>\n          <th scope=\"col\">Kurskod</th>\n          <th scope=\"col\">Kurs</th>\n          <th scope=\"col\">Hp</th>\n          <th scope=\"col\">Niv√•</th>\n          <th scope=\"col\">Block</th>\n          <th scope=\"col\">VOF</th>\n          <th scope=\"col\">TEN</th>\n          <th scope=\"col\">LAB</th>\n          <th scope=\"col\">PRA</th>\n          <th scope=\"col\">UPG</th>\n          <th scope=\"col\">KTR</th>\n          <th scope=\"col\">HEM</th>\n          <th scope=\"col\">BAS</th>\n        </tr>\n      </thead>\n      <tbody>\n        {coursesToRender.map((course) => (\n          <tr>\n            <Checkbox course={course}\n              semester={course.semester}\n              period={course.period}\n            />\n            {\n            <td style={{width: \"1.2em\"}}>\n              <div className=\"form-check\">\n                <input\n                  type=\"checkbox\"\n                  name=\"prop1\"\n                  id=\"string\"\n                  className=\"modal__checkbox-input\"\n                />\n              </div>\n            </td>}\n            <td style={{width: \"5em\"}}>\n              <a\n                href={\n                  \"http://www.google.com/search?q=\" + course.code + \"+liu\"\n                }\n              >\n                {course.code}\n              </a>\n            </td>\n            <td style={{width: \"40em\"}}>\n              <a href={course.url}>{course.name}</a>\n            </td>\n            <td style={{ width: \"4em\" }}>{course.points}</td>\n            <td style={{ width: \"4em\" }}>{course.level}</td>\n            <td style={{ width: \"5em\" }}>{course.block}</td>\n            <td style={{ width: \"4em\" }}>{course.vof}</td>\n            <td>{this.examinationObject(course.exam)}</td>\n            <td>{this.examinationObject(course.lab)}</td>\n            <td>{this.examinationObject(course.project)}</td>\n            <td>{this.examinationObject(course.upg)}</td>\n            <td>{this.examinationObject(course.ktr)}</td>\n            <td>{this.examinationObject(course.hem)}</td>\n            <td>{this.examinationObject(course.bas)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n  return <div>{renderedCourses}</div>;\n}\n\nconst ExaminationObject = (examination) => {\n  if (examination === true){\n    return \"X\";\n  }\n  return;\n}\n\nconst shallCourseRender = ((semester, period, dyn_values) => {\n  for (let i = 0; i < dyn_values.length; i++) {\n    if (\n      dyn_values[i].semester === semester &&\n      dyn_values[i].period === period\n    ) {\n      return true;\n    }\n  }\n  return false;\n});*/\n\nexport default CourseTable;"]},"metadata":{},"sourceType":"module"}